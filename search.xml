<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+Next搭建个人博客</title>
    <url>/2020/07/19/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p><strong>参考链接：</strong></p>
<p><a href="https://lvxuefei.top/Hexo%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E/" target="_blank" rel="noopener">Hexo站点配置文件说明</a></p>
<p><a href="https://lvxuefei.top/%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89-%E5%88%9D%E5%A7%8B%E5%8C%96demo/" target="_blank" rel="noopener">初始化demo</a></p>
<p><a href="https://lvxuefei.top/%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89-%E4%BD%BF%E7%94%A8next%E4%B8%BB%E9%A2%98/" target="_blank" rel="noopener">使用 next 主题</a></p>
<p><a href="https://lvxuefei.top/%E5%88%A9%E7%94%A8Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89-%E4%BC%98%E5%8C%96-%E5%90%84%E7%A7%8Dtips%E3%80%81%E9%BB%91%E7%A7%91%E6%8A%80%EF%BC%8C%E4%B8%8D%E6%96%AD%E6%9B%B4%E6%96%B0/" target="_blank" rel="noopener">优化 (各种 tips、黑科技，不断更新)</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Git查看或修改用户名和邮箱并实现GitHub免密登录</title>
    <url>/2020/07/19/Git%E6%9F%A5%E7%9C%8B%E6%88%96%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E9%82%AE%E7%AE%B1%E5%B9%B6%E5%AE%9E%E7%8E%B0GitHub%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</url>
    <content><![CDATA[<h1 id="查看用户名"><a href="#查看用户名" class="headerlink" title="查看用户名"></a>查看用户名</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br></pre></td></tr></table></figure>

<h1 id="查看邮箱"><a href="#查看邮箱" class="headerlink" title="查看邮箱"></a>查看邮箱</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config user.email</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h1 id="修改用户名"><a href="#修改用户名" class="headerlink" title="修改用户名"></a>修改用户名</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">'Jack'</span></span><br></pre></td></tr></table></figure>

<h1 id="修改邮箱"><a href="#修改邮箱" class="headerlink" title="修改邮箱"></a>修改邮箱</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.email <span class="string">'Jack@mail.com'</span></span><br></pre></td></tr></table></figure>

<h1 id="生成SSH密钥"><a href="#生成SSH密钥" class="headerlink" title="生成SSH密钥"></a>生成SSH密钥</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>

<p>该命令执行完后会在<code>.ssh</code>目录下面生成公钥(id_rsa.pub)和私钥(id_rsa)。</p>
<h1 id="GitHub免密登录"><a href="#GitHub免密登录" class="headerlink" title="GitHub免密登录"></a>GitHub免密登录</h1><p><img src="/images/Git%E6%9F%A5%E7%9C%8B%E6%88%96%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E9%82%AE%E7%AE%B1%E5%B9%B6%E5%AE%9E%E7%8E%B0GitHub%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/github%E4%B8%AD%E6%B7%BB%E5%8A%A0ssh%20keys%E5%AE%9E%E7%8E%B0%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95.png" alt="github中添加ssh keys实现免密登录"></p>
<p>在Title处给该公钥取个名称，在Key部分将<code>id_rsa.pub</code>文件内容添加进去，然后点击“Add SSH key”按钮完成配置。</p>
<h1 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>输出以下内容说明配置成功！</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hi username! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>

<h1 id="重新设置origin"><a href="#重新设置origin" class="headerlink" title="重新设置origin"></a>重新设置origin</h1><p>删除并重新添加：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote rm origin</span><br><span class="line">git remote add origin git@github.com:username/repository.git</span><br></pre></td></tr></table></figure>

<p>查看origin的地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure>

<p>输出以下内容，说明已经改为SSH的方式了！</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">origin git@github.com:username&#x2F;repository.git (fetch)</span><br><span class="line">origin git@github.com:username&#x2F;repository.git (push)</span><br></pre></td></tr></table></figure>

<p><strong>这样push和pull操作就不用重新登录GitHub了!</strong></p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客本地文件迁移到其他电脑</title>
    <url>/2020/07/19/Hexo%E5%8D%9A%E5%AE%A2%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E8%BF%81%E7%A7%BB%E5%88%B0%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91/</url>
    <content><![CDATA[<h1 id="Github分支结构"><a href="#Github分支结构" class="headerlink" title="Github分支结构"></a>Github分支结构</h1><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E8%BF%81%E7%A7%BB%E5%88%B0%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91/github%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84.png" alt="github分支结构" style="zoom:67%;" />

<a id="more"></a>

<p>完成Hexo本地运行后，会在本地文件里生成一个<code>public</code>文件夹。<code>public</code>文件夹内是根据<code>.md</code>生成的<code>html</code>文件，也就博客的静态文件。</p>
<p>通常情况下，我们执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>就是把<code>public</code>文件夹下的文件同步到<code>github</code>，然后就能通过<a href="https://links.jianshu.com/go?to=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%3A%2F%2Fkokofe.github.io%2F" target="_blank" rel="noopener">https://username.github.io/</a>访问博客了。所以，我们的思路其实就是把<code>静态文件</code>和<code>Hexo环境</code>，分别存在<code>username.github.io</code>的<code>master</code>和<code>hexo</code>分支上。</p>
<h1 id="需要转移的文件"><a href="#需要转移的文件" class="headerlink" title="需要转移的文件"></a>需要转移的文件</h1><table>
<thead>
<tr>
<th align="left">文件(夹)</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">scaffolds/</td>
<td align="left">博客文章模板</td>
</tr>
<tr>
<td align="left">source/</td>
<td align="left">所有的博客文章</td>
</tr>
<tr>
<td align="left">themes/</td>
<td align="left">网站主题</td>
</tr>
<tr>
<td align="left">.gitignore</td>
<td align="left">push时需忽略的文件</td>
</tr>
<tr>
<td align="left">_config.yml</td>
<td align="left">站点配置文件</td>
</tr>
<tr>
<td align="left">package.json</td>
<td align="left">依赖包的名称和版本号</td>
</tr>
</tbody></table>
<h1 id="gitignore文件配置"><a href="#gitignore文件配置" class="headerlink" title=".gitignore文件配置"></a>.gitignore文件配置</h1><p>在Hexo根目录下存在<code>.gitignore</code>文件，用来忽略一些不需要的文件，如果没有的话，自己新建一个，在里面写上如下，表示这些类型文件不需要git：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules&#x2F;</span><br><span class="line">public&#x2F;</span><br><span class="line">.deploy*&#x2F;</span><br></pre></td></tr></table></figure>

<h1 id="删除主题文件中的版本控制文件-git"><a href="#删除主题文件中的版本控制文件-git" class="headerlink" title="删除主题文件中的版本控制文件(.git)"></a>删除主题文件中的版本控制文件(.git)</h1><p>如果你之前克隆过themes中的主题文件，那么应该把主题文件中的<code>.git</code>文件夹删掉，因为git不能嵌套上传，最好是显示隐藏文件，检查一下有没有，否则上传的时候会出错，导致你的主题文件无法上传，这样你的配置在别的电脑上就用不了了。例如，需要删除以下文件。</p>
<p><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E8%BF%81%E7%A7%BB%E5%88%B0%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91/%E4%B8%BB%E9%A2%98%E6%96%87%E4%BB%B6%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4.png" alt="主题文件版本控制文件删除"></p>
<p>如果clone了一些插件，这些插件的.git文件也需要删除，使用以下命令可以删除主题文件中的所有.git文件(以next主题为例)：</p>
<p><strong>Linux:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find themes/next -name <span class="string">".git"</span> | xargs rm -f</span><br></pre></td></tr></table></figure>

<h1 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h1><p>初始化一个新本地仓库，它在工作目录下生成一个名为.git的隐藏文件夹(如果初始化过了就不用再初始化了)。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<p>创建名为hexo的分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b hexo</span><br></pre></td></tr></table></figure>

<p>保存所有文件到暂存区</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add --all</span><br></pre></td></tr></table></figure>

<p>提交变更</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">"Hexo本地文件"</span></span><br></pre></td></tr></table></figure>

<p>设置远程仓库的地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add origin git@github.com:username/username.github.io.git</span><br></pre></td></tr></table></figure>

<p>推送分支到github，并用–set-upstream与origin创建关联，将hexo设置为默认分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push --<span class="built_in">set</span>-upstream origin hexo</span><br></pre></td></tr></table></figure>

<p>在这个仓库的settings中，选择默认分支为hexo分支（这样每次同步的时候就不用指定分支，比较方便）。</p>
<p><img src="/images/Hexo%E5%8D%9A%E5%AE%A2%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E8%BF%81%E7%A7%BB%E5%88%B0%E5%85%B6%E4%BB%96%E7%94%B5%E8%84%91/%E5%88%87%E6%8D%A2github%E9%BB%98%E8%AE%A4%E5%88%86%E6%94%AF.png" alt="切换github默认分支"></p>
<h1 id="迁移Hexo到新电脑"><a href="#迁移Hexo到新电脑" class="headerlink" title="迁移Hexo到新电脑"></a>迁移Hexo到新电脑</h1><p>在任意文件夹下，将GitHub上的Hexo文件克隆下来</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:username/username.github.io.git</span><br></pre></td></tr></table></figure>

<p>进入克隆下来的文件夹，并安装依赖以及git部署插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> xxx.github.io</span><br><span class="line"><span class="comment"># 只运行 npm install 就行了，会自动安装全部的依赖</span></span><br><span class="line">npm install</span><br><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>

<p>然后就可以开始写新博客了！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n <span class="string">"xxx"</span></span><br></pre></td></tr></table></figure>

<p>注意：需要使用git push把源文件推到分支上</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">"xxxx"</span></span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean <span class="comment"># 清理</span></span><br><span class="line">hexo g <span class="comment"># 生成</span></span><br><span class="line">hexo d <span class="comment"># 发布文章, 发布到GitHub上</span></span><br></pre></td></tr></table></figure>

<p><strong>可选插件</strong></p>
<p>支持<code>本地搜索</code>功能：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>支持<code>网站字数</code>和<code>阅读时长</code>统计功能：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure>

<p>支持相关文章推荐功能：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-related-popular-posts --save</span><br></pre></td></tr></table></figure>

<p>支持快速连接技术：通过在空闲时间预取视区内链接来加快后续页面加载速度</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save quicklink</span><br></pre></td></tr></table></figure>

<p><strong>参考链接：</strong></p>
<p><a href="https://www.jianshu.com/p/153490a029a5" target="_blank" rel="noopener">https://www.jianshu.com/p/153490a029a5</a></p>
<p><a href="https://fl4g.cn/2018/08/03/Hexo博客迁移到其他电脑/" target="_blank" rel="noopener">https://fl4g.cn/2018/08/03/Hexo博客迁移到其他电脑/</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring基础</title>
    <url>/2020/07/16/Spring%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="常用依赖"><a href="#常用依赖" class="headerlink" title="常用依赖"></a>常用依赖</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="注解说明"><a href="#注解说明" class="headerlink" title="注解说明"></a>注解说明</h2><ul>
<li>@Autowired: 自动装配，先通过类型查找，查找失败则通过名字查找</li>
<li>@Qualifier(value=”xxx”): 通常与@Autowired连用，@Autowired装配失败，则在IOC容器中查找id为@Qualifier中的value值的bean，将其装配到对象中</li>
<li>@Nullable: 字段标记了这个注解，说明这个字段可以为null</li>
<li>@Resource: 自动装配，先通过名字再通过类型</li>
<li>@Component: 组件，放在类上，说明这个类被Spring管理了，就是bean!</li>
</ul>
]]></content>
      <categories>
        <category>Spring</category>
      </categories>
  </entry>
  <entry>
    <title>Typora插入图片</title>
    <url>/2020/07/19/Typora%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<h1 id="Typora插入图片配置"><a href="#Typora插入图片配置" class="headerlink" title="Typora插入图片配置"></a>Typora插入图片配置</h1><p>首先在 <code>hexo &gt; source</code>目录下建一个文件夹叫images，用来保存博客中的图片。每篇博客建立相应的文件夹，将这篇博客的图片放入对应的文件夹中。例如将这篇博客的图片放入<code>hexo &gt; source &gt; images &gt; Typora插入图片</code>文件夹中。</p>
<p>打开Typora的 <code>文件 &gt; 偏好设置</code>，进行如下设置。</p>
<a id="more"></a>

<p><img src="/images/Typora%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/%E5%9B%BE%E8%B1%A1%E5%81%8F%E5%A5%BD%E8%AE%BE%E7%BD%AE.png" alt="图象偏好设置"></p>
<p>但是仅仅这样设置还不够，这样设置在Typora中倒是能看图片了，但是使用的却是相对于当前md文件的相对路径，可是如果启动hexo，是要用服务器访问的，而服务器显然无法根据这个相对路径正确访问到图片，因此还需要在Typora中进行进一步设置。</p>
<p>在Typora菜单栏点击 <code>格式-&gt;图像-&gt;设置图片根目录</code>，将<code>hexo/source</code>作为其根目录。</p>
<p><strong>一定要先设置了图片根目录后再插入图片，否则图片路径会不正确喔！</strong></p>
]]></content>
      <categories>
        <category>Typora</category>
      </categories>
      <tags>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql学习笔记</title>
    <url>/2020/07/18/Mysql%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="MySQl简介"><a href="#MySQl简介" class="headerlink" title="MySQl简介"></a>MySQl简介</h2><ul>
<li>由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品</li>
<li>MySQL 是最流行的关系型数据库管理系统</li>
<li>关系数据库将数据保存在不同的表中</li>
<li>所使用的 SQL 语言是用于访问数据库的最常用标准化语言</li>
<li>体积小、速度快、成本低</li>
</ul>
<p>官网文档： <a href="https://dev.mysql.com/doc/refman/5.7/en/" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/</a></p>
<a id="more"></a>

<h3 id="学习思路"><a href="#学习思路" class="headerlink" title="学习思路"></a>学习思路</h3><p>对比：SQLyog的可视化操作，查看历史记录</p>
<p>必须记住基本的固定语法和关键字</p>
<h2 id="1-初始MySQL"><a href="#1-初始MySQL" class="headerlink" title="1.初始MySQL"></a>1.初始MySQL</h2><p>javaEE；企业级java开发 web</p>
<p>前端  （页面【展示，数据】）</p>
<p>后台 （连接点【连接数据库jdbc】，连接前端【控制：控制视图跳转，给前端传递数据】）</p>
<p>数据库（存数据）</p>
<h3 id="1-1-什么是数据库"><a href="#1-1-什么是数据库" class="headerlink" title="1.1.什么是数据库"></a>1.1.什么是数据库</h3><p>数据库（DataBase，DB）</p>
<p>概念：数据仓库，安转在操作系统之上，存储大量数据</p>
<p>作用：存储数据，管理数据</p>
<h3 id="1-2-数据库分类"><a href="#1-2-数据库分类" class="headerlink" title="1.2.数据库分类"></a>1.2.数据库分类</h3><p>关系型数据库（SQL）</p>
<ul>
<li>MySQL，Oracle…</li>
<li>通过表与表之间，行和列之间的关系来存储数据</li>
</ul>
<p>非关系型数据库（NOSQL）</p>
<ul>
<li>Redis，MongDB</li>
<li>非关系型数据库，对象存储，通过对象自身的属性来存储</li>
</ul>
<h3 id="1-3-DBMS（数据库管理软件）"><a href="#1-3-DBMS（数据库管理软件）" class="headerlink" title="1.3.DBMS（数据库管理软件）"></a>1.3.DBMS（数据库管理软件）</h3><ul>
<li>数据库的管理软件，科学有效的管理数据。维护和获取数据</li>
</ul>
<h3 id="1-4-连接数据库"><a href="#1-4-连接数据库" class="headerlink" title="1.4.连接数据库"></a>1.4.连接数据库</h3><p>命令行连接</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">mysql -uroot -p123456    <span class="comment">--连接数据库</span></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 所有的语句都用分号结尾</span></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>; 		<span class="comment">--刷新权限</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;		<span class="comment">--查看所有数据库</span></span><br><span class="line"></span><br><span class="line">mysql&gt; use school	--切换数据库</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;		<span class="comment">--查看当前数据库中的所有表</span></span><br><span class="line"><span class="keyword">describe</span> student;	<span class="comment">--显示当前数据库中具体表的信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> first_study;	<span class="comment">--创建数据库</span></span><br><span class="line"></span><br><span class="line">exit;				<span class="comment">--退出连接</span></span><br></pre></td></tr></table></figure>

<p><strong>数据库 xx 语言</strong>（CRUD）</p>
<p>DDL    定义</p>
<p>DML    操作</p>
<p>DQL    查询</p>
<p>DCL    控制</p>
<h2 id="2-操作数据库"><a href="#2-操作数据库" class="headerlink" title="2.操作数据库"></a>2.操作数据库</h2><p>操作数据库&gt;操作数据库中的表&gt;操作表中的数据</p>
<h3 id="2-1-操作数据库"><a href="#2-1-操作数据库" class="headerlink" title="2.1.操作数据库"></a>2.1.操作数据库</h3><h4 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> first_study; </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> first_study;	<span class="comment">--创建数据库</span></span><br></pre></td></tr></table></figure>

<h4 id="2-删除数据库"><a href="#2-删除数据库" class="headerlink" title="2.删除数据库"></a>2.删除数据库</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> hello;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> hello;</span><br></pre></td></tr></table></figure>

<h4 id="3-使用数据库"><a href="#3-使用数据库" class="headerlink" title="3.使用数据库"></a>3.使用数据库</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USE</span> first_study;</span><br><span class="line"><span class="keyword">USE</span> <span class="string">`school`</span>;	<span class="comment">--使用反引号，如果表名或字段名为特殊字符，需要加``</span></span><br></pre></td></tr></table></figure>

<h4 id="4-查看数据库"><a href="#4-查看数据库" class="headerlink" title="4.查看数据库"></a>4.查看数据库</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">shwo DATABASES;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-数据库的列类型"><a href="#2-2-数据库的列类型" class="headerlink" title="2.2.数据库的列类型"></a>2.2.数据库的列类型</h3><h4 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h4><ul>
<li>==int            标准的整数               4字节==  【常用】</li>
<li>bigint      较大的数据                8字节</li>
<li>float         浮点数                     4字节</li>
<li>double      浮点数                   8字节</li>
<li>decimal    字符串形式的浮点数      【金融计算使用】</li>
</ul>
<h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><ul>
<li>char           字符串固定大小      0~255</li>
<li>varchar          可变字符串         0~65535      常用   String、</li>
<li>tinytext           微型文本           2^8-1</li>
<li>text                  大文本               2^16-1</li>
</ul>
<h4 id="时间日期"><a href="#时间日期" class="headerlink" title="时间日期"></a>时间日期</h4><ul>
<li>date   YYYY-MM-DD  日期格式</li>
<li>time    HH:mm:ss     时间格式</li>
<li>==datetime     YYYY-MM-DD HH:mm:ss  最常用的时间格式==</li>
<li>==timestamp  时间戳    1970.1.1 到现在的毫秒数==</li>
<li>year    年</li>
</ul>
<h4 id="null"><a href="#null" class="headerlink" title="null"></a>null</h4><ul>
<li>没有值，未知</li>
<li>避免使用null进行运算</li>
</ul>
<h3 id="2-3-数据库的字段属性【重点】"><a href="#2-3-数据库的字段属性【重点】" class="headerlink" title="2.3.数据库的字段属性【重点】"></a>2.3.数据库的字段属性【重点】</h3><h4 id="Unsigned："><a href="#Unsigned：" class="headerlink" title="Unsigned："></a>Unsigned：</h4><ul>
<li>无符号的整数</li>
<li>声明该列不能定义为负数</li>
</ul>
<h4 id="Zerofill："><a href="#Zerofill：" class="headerlink" title="Zerofill："></a>Zerofill：</h4><ul>
<li>不足的位数，使用0来填充   <ul>
<li>int（M）     </li>
<li>int 比较特殊    如果是varchar这个M就代表存储大小</li>
<li>M指的是最大显示宽度，对打有效显示宽度为225，显示宽度与存储大小无关</li>
</ul>
</li>
</ul>
<h4 id="自增"><a href="#自增" class="headerlink" title="自增"></a>自增</h4><ul>
<li>自动在上一条记录的基础上 +1（默认）</li>
<li>通常用来设计唯一的主键  index  ，必须是整数类型</li>
<li>可以自定义设计主键自增的起始值和步长</li>
</ul>
<h4 id="非空-not-null"><a href="#非空-not-null" class="headerlink" title="非空  not null"></a>非空  not null</h4><ul>
<li>设置为 not null ，如果不赋值，会报错</li>
<li>null，如果不填写值，默认为null</li>
</ul>
<h4 id="默认"><a href="#默认" class="headerlink" title="默认"></a>默认</h4><ul>
<li>设置默认的值</li>
</ul>
<h4 id="【拓展】"><a href="#【拓展】" class="headerlink" title="【拓展】"></a>【拓展】</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">真实开发项目，每一个表都必须存在以下五个字段，表示一个记录的存在用意</span><br><span class="line"></span><br><span class="line">id     主键</span><br><span class="line">&#96;version&#96;    乐观锁</span><br><span class="line">is_delete    伪删除</span><br><span class="line">gmt_create   创建时间</span><br><span class="line">gmt_update   修改时间</span><br></pre></td></tr></table></figure>

<h3 id="2-4-创建数据库表"><a href="#2-4-创建数据库表" class="headerlink" title="2.4.创建数据库表"></a>2.4.创建数据库表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 目标：创建一个school数据库</span></span><br><span class="line"><span class="comment">-- 创建学生表(列，字段)，使用SQL创建</span></span><br><span class="line"><span class="comment">-- 学号int 登录密码varchar(20) 姓名，性别varchar(2),出生日期(datetime),家庭住址,email</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注意点，使用英文(), 表的名称 和 字段尽量使用 `` 括起来</span></span><br><span class="line"><span class="comment">-- AUTO_INCREMENT 自增</span></span><br><span class="line"><span class="comment">-- 字符串 使用 单引号(或双引号)括起来</span></span><br><span class="line"><span class="comment">-- 所有的语句后面加, (英文的), 最后一个不用加</span></span><br><span class="line"><span class="comment">-- PRIMARY KEY 主键，一般一个表只有一个唯一的主键！</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`student`</span>(</span><br><span class="line">	<span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'学号'</span>,</span><br><span class="line">	<span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'匿名'</span> <span class="keyword">COMMENT</span> <span class="string">'姓名'</span>,</span><br><span class="line">	<span class="string">`pwd`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'123456'</span> <span class="keyword">COMMENT</span> <span class="string">'密码'</span>,</span><br><span class="line">	<span class="string">`sex`</span> <span class="built_in">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'女'</span> <span class="keyword">COMMENT</span> <span class="string">'性别'</span>,</span><br><span class="line">	<span class="string">`birthday`</span> DATETIME <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'出生日期'</span>,</span><br><span class="line">	<span class="string">`address`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'家庭住址'</span>,</span><br><span class="line">	<span class="string">`email`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'邮箱'</span>,</span><br><span class="line">	PRIMARY <span class="keyword">KEY</span>(<span class="string">`id`</span>)</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COLLATE</span>=utf8_general_ci</span><br></pre></td></tr></table></figure>

<p>格式</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] <span class="string">`表名`</span>(</span><br><span class="line">	<span class="string">`字段名`</span> 列类型 [属性] [索引] [注释],</span><br><span class="line">    <span class="string">`字段名`</span> 列类型 [属性] [索引] [注释],</span><br><span class="line">    ......</span><br><span class="line">    <span class="string">`字段名`</span> 列类型 [属性] [索引] [注释]</span><br><span class="line">)[表类型] [字符集设置] [注释]</span><br></pre></td></tr></table></figure>

<p>常用命令</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> school;   <span class="comment">-- 查看创建数据库的语句</span></span><br></pre></td></tr></table></figure>

<p>CREATE DATABASE <code>school</code> /*!40100 DEFAULT CHARACTER SET utf8 */</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student;     <span class="comment">-- 查看student数据表的定义语句</span></span><br></pre></td></tr></table></figure>

<p>CREATE TABLE <code>student</code> (<br>  <code>id</code> int NOT NULL AUTO_INCREMENT COMMENT ‘学号’,<br>  <code>name</code> varchar(30) NOT NULL DEFAULT ‘匿名’ COMMENT ‘姓名’,<br>  <code>pwd</code> varchar(20) NOT NULL DEFAULT ‘123456’ COMMENT ‘密码’,<br>  <code>sex</code> varchar(2) NOT NULL DEFAULT ‘女’ COMMENT ‘性别’,<br>  <code>birthday</code> datetime DEFAULT NULL COMMENT ‘出生日期’,<br>  <code>address</code> varchar(100) DEFAULT NULL COMMENT ‘家庭住址’,<br>  <code>email</code> varchar(50) DEFAULT NULL COMMENT ‘邮箱’,<br>  PRIMARY KEY (<code>id</code>)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DESC student   <span class="comment">-- 显示表的结构</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200606181422911.png" alt="image-20200606181422911"></p>
<h3 id="2-5-数据库引擎"><a href="#2-5-数据库引擎" class="headerlink" title="2.5.数据库引擎"></a>2.5.数据库引擎</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 数据库引擎</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  INNODB  默认使用</span></span><br><span class="line"><span class="comment">  MYISAM  早些年使用 </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">MYISAM</th>
<th align="center">INNODB</th>
</tr>
</thead>
<tbody><tr>
<td align="center">事务支持</td>
<td align="center">不支持（最新版支持）</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center">数据行锁定</td>
<td align="center">不支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center">外键约束</td>
<td align="center">不支持</td>
<td align="center">支持</td>
</tr>
<tr>
<td align="center">全文索引</td>
<td align="center">支持</td>
<td align="center">不支持（最新版支持）</td>
</tr>
<tr>
<td align="center">表空间大小</td>
<td align="center">较小</td>
<td align="center">较大，约为2倍</td>
</tr>
</tbody></table>
<ul>
<li>MYISAM   节约空间，速度较快</li>
<li>INNODB   安全性高，事务的处理，多表多用户操作</li>
</ul>
<h4 id="1-物理空间储存位置"><a href="#1-物理空间储存位置" class="headerlink" title="1.物理空间储存位置"></a>1.物理空间储存位置</h4><p>所有的数据库文件都存在data目录下，一个文件夹对应一个数据库</p>
<p>本质还是文件从存储</p>
<p>MySQL引擎在物理文件上的区别</p>
<ul>
<li>InnoDB在数据库表中只有一个 <strong>*.frm</strong> 文件，以及其上级目录data目录下的 <strong>ibdata1</strong>  文件</li>
<li>MYISAM 对应的文件<ul>
<li>*.frm  表结构的定义文件</li>
<li>*.MYD   数据文件（data）</li>
<li>*.MYI    索引文件（index）</li>
</ul>
</li>
</ul>
<h4 id="2-设置数据库中表的字符集编码"><a href="#2-设置数据库中表的字符集编码" class="headerlink" title="2.设置数据库中表的字符集编码"></a>2.设置数据库中表的字符集编码</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">CHARSET=utf8</span><br></pre></td></tr></table></figure>

<p>必须设置，不设置的话，会使用MySQL默认的字符集编码（不支持中文！）</p>
<p>Mysql的默认编码是Latin1，不支持中文</p>
<p>我们可以在 <strong>my.ini</strong> 中配置默认的编码</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">character-set-server</span>=utf8</span><br></pre></td></tr></table></figure>

<h3 id="2-6-修改和删除表"><a href="#2-6-修改和删除表" class="headerlink" title="2.6.修改和删除表"></a>2.6.修改和删除表</h3><h4 id="1-修改表"><a href="#1-修改表" class="headerlink" title="1.修改表"></a>1.修改表</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 修改表名   ALTER TABLE 旧表名 RENAME AS 新表名</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher <span class="keyword">RENAME</span> <span class="keyword">AS</span> teacher1</span><br><span class="line"><span class="comment">-- 增加表的字段	  ALTER TABLE 表名 ADD 字段名 属性</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher1 <span class="keyword">ADD</span> age <span class="built_in">INT</span>(<span class="number">11</span>)</span><br><span class="line"><span class="comment">-- 修改表的字段（修改约束，重命名）</span></span><br><span class="line"><span class="comment">-- ALTER TABLE 表名 MODIFY 字段名 列属性()</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher1 <span class="keyword">MODIFY</span> age <span class="built_in">VARCHAR</span>(<span class="number">11</span>)   <span class="comment">-- 修改约束</span></span><br><span class="line"><span class="comment">-- ALTER TABLE 表名 CHANGE 旧字段名 新字段名 列属性()</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher1 <span class="keyword">CHANGE</span> age age1 <span class="built_in">INT</span>(<span class="number">3</span>)   <span class="comment">-- 重命名	</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除表的字段</span></span><br><span class="line"><span class="comment">-- ALTER TABLE 表名 DROP 字段名</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teacher1 <span class="keyword">DROP</span> age1</span><br></pre></td></tr></table></figure>

<h4 id="2-删除"><a href="#2-删除" class="headerlink" title="2.删除"></a>2.删除</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 删除表 （如果表存在再删除）</span></span><br><span class="line"><span class="comment">-- DROP TABLE IF EXISTS 表名</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> teacher1</span><br></pre></td></tr></table></figure>

<p><strong>所有的创建和删除尽量加上判断，以免报错</strong></p>
<p><strong>注意点：</strong></p>
<ul>
<li>`` 字段名，使用这个包裹！</li>
<li>注释两种： 单行注释–  和多行注释/**/</li>
<li>sql 关键字大小写不敏感，建议写小写</li>
<li>所有符号全部用英文</li>
</ul>
<h2 id="3-数据库的数据管理"><a href="#3-数据库的数据管理" class="headerlink" title="3.数据库的数据管理"></a>3.数据库的数据管理</h2><h3 id="3-1-外键【了解】"><a href="#3-1-外键【了解】" class="headerlink" title="3.1.外键【了解】"></a>3.1.外键【了解】</h3><h4 id="1-方式一"><a href="#1-方式一" class="headerlink" title="1.方式一"></a>1.方式一</h4><ul>
<li>grade表</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`grade`</span>(</span><br><span class="line">    <span class="string">`gradeid`</span> <span class="built_in">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'年级id'</span>,</span><br><span class="line">    <span class="string">`gradename`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'年级名称'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span>(<span class="string">`gradeid`</span>)</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8</span><br></pre></td></tr></table></figure>

<ul>
<li>student表</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- primary key  主键 ， 一般一个表只有一个唯一的主键	</span></span><br><span class="line"><span class="comment">-- CONSTRAINT 约束名 FOREIGN KEY (作为外键的列) REFERENCES 被引用表(哪个字段)</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`student`</span>(</span><br><span class="line">    <span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'学号'</span>,</span><br><span class="line">    <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'匿名'</span> <span class="keyword">COMMENT</span> <span class="string">'姓名'</span>,</span><br><span class="line">    <span class="string">`pwd`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'123456'</span> <span class="keyword">COMMENT</span> <span class="string">'密码'</span>,</span><br><span class="line">    <span class="string">`sex`</span> <span class="built_in">VARCHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'女'</span> <span class="keyword">COMMENT</span> <span class="string">'性别'</span>,</span><br><span class="line">    <span class="string">`birthday`</span> DATETIME <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'出生日期'</span>,</span><br><span class="line">    <span class="string">`gradeid`</span> <span class="built_in">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'学生的年级'</span>,</span><br><span class="line">    <span class="string">`address`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'家庭住址'</span>, </span><br><span class="line">    <span class="string">`email`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'邮箱'</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span>(<span class="string">`id`</span>),	</span><br><span class="line">    <span class="keyword">KEY</span> <span class="string">`FK_gradeid`</span> (<span class="string">`gradeid`</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> <span class="string">`FK_gradeid`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`gradeid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`grade`</span>(<span class="string">`gradeid`</span>)</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8</span><br></pre></td></tr></table></figure>



<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200606192936642.png" alt="image-20200606192936642"></p>
<ul>
<li>删除有外键关系的表的时候，先删除引用别人的表，再删除被引用的表</li>
</ul>
<h4 id="2-方式二"><a href="#2-方式二" class="headerlink" title="2.方式二"></a>2.方式二</h4><p>创建表成功后，添加外键约束</p>
<ul>
<li>创建表的时候没有外键关系:</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建表的时候没有外键关系</span></span><br><span class="line"><span class="comment">-- ALTER TABLE 表 ADD CONSTRAINT 约束名 FOREIGN KEY (作为外键的列) REFERENCES 被引用表(哪个字段)</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`student`</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> <span class="string">`FK_gradeid`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`gradeid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`grade`</span>(<span class="string">`gradeid`</span>)</span><br></pre></td></tr></table></figure>

<p><strong>以上的操作都是物理外键，数据库级别的外键，不建议使用（避免数据库过多造成困扰）</strong></p>
<p>==最佳实践==</p>
<ul>
<li>数据库就是单纯的表，只用来存数据，只有行（数据）和列（字段）</li>
<li>想使用多张表的数据，想使用外键（程序去实现）</li>
</ul>
<h3 id="3-2-DML语言【掌握】"><a href="#3-2-DML语言【掌握】" class="headerlink" title="3.2.DML语言【掌握】"></a>3.2.DML语言【掌握】</h3><p><strong>数据库意义</strong>：数据存储，数据管理</p>
<p>DML语言：数据操作语言</p>
<ul>
<li>insert</li>
<li>update</li>
<li>delete</li>
</ul>
<h3 id="3-3-添加"><a href="#3-3-添加" class="headerlink" title="3.3.添加"></a>3.3.添加</h3><p>语法：==insert into 表名（字段一,字段二,字段三,…）VALUES（’值一’,’值二’,’值三’,…）,(…),(…)== </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- insert into 表名（字段一,字段二,字段三,...）VALUES（'值一','值二','值三',...）,(...),(...) </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`grade`</span> (<span class="string">`gradename`</span>) <span class="keyword">VALUES</span>(<span class="string">'大一'</span>);</span><br><span class="line"><span class="comment">-- 由于主键自增，可以省略主键</span></span><br><span class="line"><span class="comment">-- 写插入语句，一定要一一对应</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`grade`</span> (<span class="string">`gradename`</span>) </span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">'大二'</span>),(<span class="string">'大三'</span>),(<span class="string">'大四'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入多条数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`student`</span> </span><br><span class="line">(<span class="string">`name`</span>,<span class="string">`pwd`</span>,<span class="string">`sex`</span>,<span class="string">`birthday`</span>,<span class="string">`gradeid`</span>,<span class="string">`address`</span>,<span class="string">`email`</span>)</span><br><span class="line"><span class="keyword">VALUES</span> </span><br><span class="line">(<span class="string">'李四'</span>,<span class="string">'111111'</span>,<span class="string">'男'</span>,<span class="string">'1988-02-15'</span>,<span class="number">4</span>,<span class="string">'广州白云'</span>,<span class="string">'lisi@si4,com'</span>),</span><br><span class="line">(<span class="string">'王五'</span>,<span class="string">'111111'</span>,<span class="string">'男'</span>,<span class="string">'1985-01-20'</span>,<span class="number">4</span>,<span class="string">'潮州潮安'</span>,<span class="string">'wangwu@wu5,com'</span>)</span><br></pre></td></tr></table></figure>

<p>注意事项</p>
<ul>
<li>字段之间用 英文逗号 隔开</li>
<li>字段可以省略（添加部分），但是 values 后面的值一定要一一对应</li>
<li>可以同时插入多条数据，values 每条数据之间用括号隔开  values (…),(…),(…)</li>
</ul>
<h3 id="3-4-修改"><a href="#3-4-修改" class="headerlink" title="3.4.修改"></a>3.4.修改</h3><p>update 修改谁  set 字段=新值（修改的条件）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 修改学生名字</span></span><br><span class="line"><span class="comment">-- UPDATE 表名 SET 字段名='新值' WHERE [条件]</span></span><br><span class="line"><span class="keyword">update</span> <span class="string">`student`</span> <span class="keyword">set</span> <span class="keyword">name</span>=<span class="string">'伯格曼'</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">5</span></span><br><span class="line"><span class="comment">-- 在不指定条件的情况下 会删除所有的表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- UPDATE 表名 SET 字段一='新值'，字段二='新值'，字段三='新值' WHERE [条件]</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="string">`student`</span> <span class="keyword">SET</span> <span class="keyword">NAME</span>=<span class="string">'洪尚秀'</span>,pwd=<span class="string">'123456'</span>,address=<span class="string">'韩国'</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">4</span></span><br></pre></td></tr></table></figure>

<p>条件： where子句  运算符  id =某个值，&gt;某个值 ，在某个区间</p>
<table>
<thead>
<tr>
<th>操作符</th>
<th>含义</th>
<th>范围</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>=</td>
<td>等于</td>
<td>1=2</td>
<td>false</td>
</tr>
<tr>
<td>&lt;&gt;或！=</td>
<td>不等于</td>
<td>1&lt;&gt;2</td>
<td>true</td>
</tr>
<tr>
<td>&gt;,&lt;,&gt;=,&lt;=</td>
<td>…</td>
<td>…</td>
<td>…</td>
</tr>
<tr>
<td>between… and …</td>
<td>在某个区间</td>
<td>[1,3]</td>
<td></td>
</tr>
<tr>
<td>and</td>
<td>&amp;&amp;</td>
<td>1=2 and 1&lt;2</td>
<td>false</td>
</tr>
<tr>
<td>or</td>
<td>||</td>
<td>1=2 and 1&lt;2</td>
<td>true</td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 通过多个条件</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="string">`student`</span> <span class="keyword">SET</span> <span class="string">`name`</span>=<span class="string">'abcd'</span> <span class="keyword">WHERE</span> <span class="keyword">NAME</span>=<span class="string">'aaaaa'</span> <span class="keyword">AND</span> sex=<span class="string">'男'</span> </span><br><span class="line"><span class="comment">-- 修改多个属性  用英文逗号 ,  隔开</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="string">`student`</span> <span class="keyword">SET</span> <span class="string">`birthday`</span>=<span class="keyword">CURRENT_DATE</span>,gradeid=<span class="number">3</span> <span class="keyword">WHERE</span> <span class="keyword">NAME</span>=<span class="string">'cc'</span></span><br><span class="line"><span class="comment">-- 通过变量赋值</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="string">`student`</span> <span class="keyword">SET</span> <span class="keyword">SET</span> <span class="string">`birthday`</span>=<span class="keyword">CURRENT_DATE</span> <span class="keyword">WHERE</span> <span class="keyword">NAME</span>=<span class="string">'cc'</span></span><br></pre></td></tr></table></figure>

<p> 注意：</p>
<ul>
<li>写SQL语句时数据库的字段（列），尽量加``</li>
<li>修改的时候如果没有条件，会修改所有的值</li>
<li>value（新赋的值），可以是一个具体的之，也可以是一个变量  <ul>
<li>例如：  SET <code>birthday</code>=CURRENT_DATE</li>
</ul>
</li>
</ul>
<h3 id="3-5-删除"><a href="#3-5-删除" class="headerlink" title="3.5.删除"></a>3.5.删除</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 删除数据 （避免这样写）</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="string">`student`</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">11</span>   <span class="comment">-- 不会影响自增</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空某张表</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="string">`student`</span>   <span class="comment">-- 自增会归零</span></span><br></pre></td></tr></table></figure>

<p>delete 和 TRUNCATE 区别</p>
<ul>
<li>相同点：都能删除数据，都不会删除表结构（如：不会影响自增）</li>
<li>不同：<ul>
<li>TRUNCATE  重新设置 自增会归零</li>
<li>TRUNCATE  不会影响事务</li>
</ul>
</li>
</ul>
<p>delete后重启数据库，现象</p>
<ul>
<li>InnoDB 自增会从1开始（存储在内存中，断电即失）</li>
<li>MyISAM 继续从上一个自增量开始（存储在文件中，不会丢失）</li>
</ul>
<h2 id="4-DQL查询数据【最重点】"><a href="#4-DQL查询数据【最重点】" class="headerlink" title="4.DQL查询数据【最重点】"></a>4.DQL查询数据【最重点】</h2><h3 id="4-1DQL"><a href="#4-1DQL" class="headerlink" title="4.1DQL"></a>4.1DQL</h3><p>（Data Query Language：数据查询语言）</p>
<ul>
<li>所有的查询操作都用它  select</li>
<li>简单的查询，复杂的查询都能做</li>
<li>==数据库中最核心的语言==</li>
<li>使用频率最高的语句</li>
</ul>
<h3 id="4-2-指定查询字段"><a href="#4-2-指定查询字段" class="headerlink" title="4.2.指定查询字段"></a>4.2.指定查询字段</h3><p>==语法：SELECT 字段 FROM 表==</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询所有学生</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student</span><br><span class="line"><span class="comment">-- 指定字段查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentname`</span> <span class="keyword">FROM</span> student</span><br><span class="line"><span class="comment">-- 给结果其别名  AS 可以给字段其别名 也可以给表起别名</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span> <span class="keyword">AS</span> 学号,<span class="string">`studentname`</span> <span class="keyword">AS</span> 学生姓名 <span class="keyword">FROM</span> student <span class="keyword">AS</span> 学生表</span><br><span class="line"><span class="comment">-- 函数 CONCAT(a,b) </span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="keyword">CONCAT</span>(<span class="string">'姓名：'</span>,<span class="string">`studentname`</span>) </span><br><span class="line"><span class="keyword">AS</span> 新的名字</span><br><span class="line"><span class="keyword">FROM</span> student</span><br></pre></td></tr></table></figure>

<p>==去重: distinct==</p>
<p>作用：去掉select查询出来中重复的数据，值保留一条</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询哪一些同学参加了考试</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">result</span>  <span class="comment">-- 查询全部的考试成绩</span></span><br><span class="line"><span class="comment">-- 查询哪些同学参加了考试</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">`studentno`</span> <span class="keyword">from</span> <span class="keyword">result</span></span><br><span class="line"><span class="comment">-- distinct 去重</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> <span class="string">`studentno`</span> <span class="keyword">from</span> <span class="keyword">result</span></span><br></pre></td></tr></table></figure>

<p>其他一些查询（表达式）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">version</span>()		<span class="comment">-- 查询系统版本		(函数)</span></span><br><span class="line"><span class="keyword">select</span> <span class="number">59</span>+<span class="number">55</span>*<span class="number">5</span> <span class="keyword">as</span> 运算结果	<span class="comment">-- 计算			(表达式)</span></span><br><span class="line"><span class="keyword">select</span> @@auto_increment_increment <span class="comment">-- 查询自增的步长	(变量)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 学生考试成绩 +1分</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentresult`</span> <span class="keyword">FROM</span> <span class="string">`result`</span></span><br><span class="line"><span class="comment">-- 加一分后</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentresult`</span>+<span class="number">1</span> <span class="keyword">AS</span> <span class="string">'加一分后'</span> <span class="keyword">FROM</span> <span class="string">`result`</span></span><br></pre></td></tr></table></figure>

<p>数据库中的表达式：文本值，列，Null，函数。计算表达式，系统变量，</p>
<p>select ==表达式== from 表</p>
<h3 id="4-3-where条件子句"><a href="#4-3-where条件子句" class="headerlink" title="4.3.where条件子句"></a>4.3.where条件子句</h3><p>作用：检索数据中符合条件的值</p>
<p>搜索的条件有一个或者多个表达式组成！ 结果是 布尔值</p>
<blockquote>
<p>逻辑运算符</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--  where  逻辑运算符</span></span><br><span class="line"><span class="comment">-- 查询考试成绩在  90-100 之间</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">`studentno`</span>,<span class="string">`studentresult`</span> <span class="keyword">from</span> <span class="string">`result`</span>  <span class="comment">-- 查询全部成绩</span></span><br><span class="line"><span class="keyword">where</span> <span class="string">`studentresult`</span>&gt;=<span class="number">90</span> <span class="keyword">and</span> <span class="string">`studentresult`</span>&lt;=<span class="number">100</span></span><br><span class="line"><span class="comment">-- and &amp;&amp;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentresult`</span> <span class="keyword">FROM</span> <span class="string">`result`</span>  </span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">`studentresult`</span>&gt;=<span class="number">90</span> <span class="keyword">and</span> <span class="string">`studentresult`</span>&lt;=<span class="number">100</span></span><br><span class="line"><span class="comment">--  between (区间)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentresult`</span> <span class="keyword">FROM</span> <span class="string">`result`</span>  </span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">`studentresult`</span> <span class="keyword">between</span> <span class="number">90</span> <span class="keyword">AND</span> <span class="number">100</span></span><br><span class="line"><span class="comment">-- 除了学号为 1000 之外的学生成绩</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentresult`</span> <span class="keyword">FROM</span> <span class="string">`result`</span>  </span><br><span class="line"><span class="keyword">where</span> <span class="string">`studentno`</span> != <span class="number">1000</span> </span><br><span class="line"><span class="comment">-- 除了学号为 1000 之外的学生成绩   not</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentresult`</span> <span class="keyword">FROM</span> <span class="string">`result`</span>  </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="string">`studentno`</span> = <span class="number">1000</span> <span class="keyword">and</span> <span class="number">1001</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>==模糊查询：比较运算符==</p>
</blockquote>
<table>
<thead>
<tr>
<th>运算符</th>
<th>语法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>is null</td>
<td>a is null</td>
<td>如果操作符为null，结果为真</td>
</tr>
<tr>
<td>is not null</td>
<td>a is not null</td>
<td>如果操作符不为null，结果为真</td>
</tr>
<tr>
<td>between</td>
<td>a between b and c</td>
<td>若a在b和c之间，结果为真</td>
</tr>
<tr>
<td><strong>like</strong></td>
<td>a like b</td>
<td>SQL匹配，如果a匹配b，结果为真</td>
</tr>
<tr>
<td><strong>in</strong></td>
<td>a in (a1,a2,a3…)</td>
<td>假设a在a1,或者a2…其中某一个值中，结果为真</td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- ======== 模糊查询 ========</span></span><br><span class="line"><span class="comment">-- ============= like =============</span></span><br><span class="line"><span class="comment">-- 查询姓 郭 的同学</span></span><br><span class="line"><span class="comment">-- like %(代表0到任意个字符)  _(只指代一个字符)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentname`</span> <span class="keyword">FROM</span> student </span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">'郭%'</span>;</span><br><span class="line"><span class="comment">-- 查询姓 郭 的同学 并且 名字只有两个字的</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentname`</span> <span class="keyword">FROM</span> student </span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">'郭_'</span>;</span><br><span class="line"><span class="comment">-- 查询姓 李 的同学 并且 名字只有三个字的</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentname`</span> <span class="keyword">FROM</span> student </span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">'李__'</span>;</span><br><span class="line"><span class="comment">-- 查询名字中有 志 的同学 </span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentname`</span> <span class="keyword">FROM</span> student </span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">'%志%'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ============= in(具体的一个或多个值) =============</span></span><br><span class="line"><span class="comment">-- 查询 1001,1002，1003号学生</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentname`</span> <span class="keyword">FROM</span> student </span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">`studentno`</span> <span class="keyword">IN</span> (<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>)</span><br><span class="line"><span class="comment">-- 查询在 北京西城、广东潮州 的学生</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentname`</span> <span class="keyword">FROM</span> student </span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">`address`</span> <span class="keyword">IN</span> (<span class="string">'北京西城'</span>,<span class="string">'广东潮州'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ========= null 、 not null ==============</span></span><br><span class="line"><span class="comment">-- 查询地址为空的同学</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentname`</span> <span class="keyword">FROM</span> student </span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">`address`</span> =<span class="string">''</span> <span class="keyword">OR</span> <span class="string">`address`</span> <span class="keyword">IS</span> <span class="literal">NULL</span></span><br><span class="line"><span class="comment">-- 查询有出生日期的同学  不为空</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentname`</span> <span class="keyword">FROM</span> student </span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">`borndate`</span> <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="comment">-- 查询没有出生日期的同学  为空</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`studentname`</span> <span class="keyword">FROM</span> student </span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">`borndate`</span> <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></table></figure>

<h3 id="4-4-联表查询"><a href="#4-4-联表查询" class="headerlink" title="4.4.联表查询"></a>4.4.联表查询</h3><h4 id="1-inner-left-right-join"><a href="#1-inner-left-right-join" class="headerlink" title="1.inner/left/right join"></a>1.inner/left/right join</h4><blockquote>
<p> join</p>
</blockquote>
<p>– join (连接的表) on (判断的条件) 连接查询<br>– where 等值查询</p>
<p><strong>往哪个表差就是以这个表为基准：</strong></p>
<ul>
<li><p>a left join b on (以a表为基准)  </p>
</li>
<li><p>a rightjoin b on (以b表为基准)  </p>
</li>
</ul>
<p>多表连接思路：</p>
<ul>
<li>要查哪些数据，在哪些表中</li>
<li>从这个表中找交叉条件（连接点）</li>
<li>先从查询两个表开始</li>
</ul>
<table>
<thead>
<tr>
<th>操作</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>inner join</td>
<td>如果表中至少有一个匹配，就返回值</td>
</tr>
<tr>
<td>left join</td>
<td>会从 左表 中返回所有的值，即使 左表的值 在 右表 中没有匹配</td>
</tr>
<tr>
<td>right join</td>
<td>会从 右表 中返回所有的值，即使 左表 中没有匹配</td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- ============= 联表查询 ======================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询参加考试的同学 （学号，姓名[在另外一个表中]，科目编号，成绩）</span></span><br><span class="line"><span class="comment">/*  思路</span></span><br><span class="line"><span class="comment">     1.分析需求，分析查询的字段来自那些表 （连接查询）</span></span><br><span class="line"><span class="comment">     2.确定使用哪种连接方式查询？ 总共7中</span></span><br><span class="line"><span class="comment">	   确定交叉点：两表之间哪些数据是相同的</span></span><br><span class="line"><span class="comment">	   判断的条件： 学生表 `studentno` = 成绩表 `studentno`</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- inner</span></span><br><span class="line"><span class="keyword">select</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span>,<span class="string">`subjectno`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> <span class="keyword">result</span> <span class="keyword">as</span> r</span><br><span class="line"><span class="keyword">where</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- join (连接的表) on (判断的条件) 连接查询</span></span><br><span class="line"><span class="comment">-- where 等值查询</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- left join ... on </span></span><br><span class="line"><span class="keyword">SELECT</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span>,<span class="string">`subjectno`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line"><span class="keyword">on</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- right join ... on </span></span><br><span class="line"><span class="keyword">SELECT</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span>,<span class="string">`subjectno`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>案例一       了解联表查询</p>
</blockquote>
<ul>
<li>left join</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- left join ... on </span></span><br><span class="line"><span class="keyword">SELECT</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span>,<span class="string">`subjectno`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line"><span class="keyword">on</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200607031509743.png" alt="image-20200607031509743"></p>
<p>左表中的 studentname 为 gokudu 的学生在 右表 中并没有值（没有该学生对应的的 studentno），但仍然能查询出来。</p>
<p>应验了 ==left join 会从 左表 中返回所有的值，即使 左表的值 在 右表 中没有匹配==</p>
<ul>
<li>right join</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- right join ... on </span></span><br><span class="line"><span class="keyword">SELECT</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span>,<span class="string">`subjectno`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200607032313667.png" alt="image-20200607032313667"></p>
<p>查询不出来 gokudu ，因为右表中查询出来的  studentno 中，并没有和 gokudu 的 studentno 匹配的。</p>
<p>而查询出来的没有为null的，是因为右表中其他所有的值都能够在左表中找到匹配的。</p>
<blockquote>
<p>案例二    利用左表查询，找出缺考的同学</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询缺考的同学</span></span><br><span class="line"><span class="keyword">SELECT</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span>,<span class="string">`subjectno`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> student <span class="keyword">AS</span> s</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> <span class="keyword">result</span> <span class="keyword">AS</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">where</span> <span class="string">`studentresult`</span> <span class="keyword">is</span> <span class="literal">null</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>案例三    思考题（查询参加考试的同学信息：学号，学生姓名，科目名，分数）</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 思考题（查询参加考试的同学信息：学号，学生姓名，科目名，分数）</span></span><br><span class="line"><span class="comment">/* 思路</span></span><br><span class="line"><span class="comment">     1.分析需求，分析查询的字段来自哪些表，student，subject，result</span></span><br><span class="line"><span class="comment">     2.确定使用哪种连接方式查询？ 总共7中</span></span><br><span class="line"><span class="comment">     确定交叉点：两表之间哪些数据是相同的</span></span><br><span class="line"><span class="comment">	   判断的条件： 学生表 `studentno` = 成绩表 `studentno`</span></span><br><span class="line"><span class="comment">			成绩表 `subjectno` = 课程表 `subjectno`</span></span><br><span class="line"><span class="comment">	</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">select</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span>,su.<span class="string">`subjectname`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">from</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">JOIN</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> <span class="string">`subject`</span> su</span><br><span class="line"><span class="keyword">where</span> r.<span class="string">`subjectno`</span> = su.<span class="string">`subjectno`</span></span><br></pre></td></tr></table></figure>

<p>可以先查询其中的两个表，然后再来与第三个表找连接点</p>
<ol>
<li>先把 result表 和 student表 连接起来， result表 左连接 student表 ，连接点是 studentno ，那么没有参加考试的 studentno  对应的学生，因为在result表中不会记录，所以在 student表 中匹配过来的都是参加考试的学生</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span>,<span class="string">`subjectno`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">from</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">JOIN</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>通过 subjectno 将上面查询出来的结果 和 subject 表 连接起来</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span>,su.<span class="string">`subjectname`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">from</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">JOIN</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> <span class="string">`subject`</span> su</span><br><span class="line"><span class="keyword">where</span> r.<span class="string">`subjectno`</span> = su.<span class="string">`subjectno`</span></span><br></pre></td></tr></table></figure>

<h4 id="2-自连接【了解】"><a href="#2-自连接【了解】" class="headerlink" title="2.自连接【了解】"></a>2.自连接【了解】</h4><p>自己的表和自己的表连接，核心：<strong>一张表拆成两张表</strong></p>
<blockquote>
<p>案例</p>
</blockquote>
<ul>
<li>建表</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--  ======= 自连接 ===========</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">category</span> (</span><br><span class="line">  categoryid <span class="built_in">INT</span>(<span class="number">10</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'主题ID'</span>,</span><br><span class="line">  pid <span class="built_in">INT</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'父ID'</span>,</span><br><span class="line">  categoryName <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'主题名字'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span>(categoryid)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> AUTO_INCREMENT=<span class="number">9</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> = utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">category</span>(categoryid,pid,categoryName)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">'2'</span>,<span class="string">'1'</span>,<span class="string">'信息技术'</span>),</span><br><span class="line">(<span class="string">'3'</span>,<span class="string">'1'</span>,<span class="string">'软件开发'</span>),</span><br><span class="line">(<span class="string">'4'</span>,<span class="string">'3'</span>,<span class="string">'数据库'</span>),</span><br><span class="line">(<span class="string">'5'</span>,<span class="string">'1'</span>,<span class="string">'美术设计'</span>),</span><br><span class="line">(<span class="string">'6'</span>,<span class="string">'3'</span>,<span class="string">'web开发'</span>),</span><br><span class="line">(<span class="string">'7'</span>,<span class="string">'5'</span>,<span class="string">'PS技术'</span>),</span><br><span class="line">(<span class="string">'8'</span>,<span class="string">'2'</span>,<span class="string">'办公信息'</span>);</span><br></pre></td></tr></table></figure>

<ul>
<li>分析</li>
</ul>
<p>父类</p>
<table>
<thead>
<tr>
<th align="center">categoryid</th>
<th align="center">categoryName</th>
</tr>
</thead>
<tbody><tr>
<td align="center">2</td>
<td align="center">信息技术</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">软件开发</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">美术设计</td>
</tr>
</tbody></table>
<p>子类</p>
<table>
<thead>
<tr>
<th align="center">pid</th>
<th align="center">categoryid</th>
<th align="center">categoryName</th>
</tr>
</thead>
<tbody><tr>
<td align="center">3</td>
<td align="center">4</td>
<td align="center">数据库</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">6</td>
<td align="center">web开发</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">7</td>
<td align="center">PS技术</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">8</td>
<td align="center">办公信息</td>
</tr>
</tbody></table>
<p>操作：查询父类对应的子类关系</p>
<table>
<thead>
<tr>
<th align="center">父类</th>
<th align="center">子类</th>
</tr>
</thead>
<tbody><tr>
<td align="center">信息技术</td>
<td align="center">办公信息</td>
</tr>
<tr>
<td align="center">软件开发</td>
<td align="center">数据库</td>
</tr>
<tr>
<td align="center">软件开发</td>
<td align="center">web开发</td>
</tr>
<tr>
<td align="center">美术设计</td>
<td align="center">PS技术</td>
</tr>
</tbody></table>
<ul>
<li>测试</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询父子信息</span></span><br><span class="line"><span class="keyword">SELECT</span> a.<span class="string">`categoryName`</span> <span class="keyword">AS</span> <span class="string">'父栏目'</span>,b.<span class="string">`categoryName`</span> <span class="keyword">AS</span> <span class="string">'子栏目'</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`category`</span> <span class="keyword">AS</span> a,<span class="string">`category`</span> <span class="keyword">AS</span> b</span><br><span class="line"><span class="keyword">WHERE</span> a.<span class="string">`categoryid`</span>=b.<span class="string">`pid`</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>案例二    查询参加 数据库结构 考试的同学信息</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 思考题（查询参加 数据库结构 考试的同学信息：学号，学生姓名，科目名，分数）</span></span><br><span class="line"><span class="comment">/* 思路</span></span><br><span class="line"><span class="comment">     1.分析需求，分析查询的字段来自哪些表，student，subject，result</span></span><br><span class="line"><span class="comment">     2.确定使用哪种连接方式查询？ 总共7中</span></span><br><span class="line"><span class="comment">     确定交叉点：两表之间哪些数据是相同的</span></span><br><span class="line"><span class="comment">	   判断的条件： 学生表 `studentno` = 成绩表 `studentno`</span></span><br><span class="line"><span class="comment">			成绩表 `subjectno` = 课程表 `subjectno`</span></span><br><span class="line"><span class="comment">	</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> s.<span class="string">`studentno`</span>,s.<span class="string">`studentname`</span>,sub.<span class="string">`subjectname`</span>,r.<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub</span><br><span class="line"><span class="keyword">ON</span> r.<span class="string">`subjectno`</span> = sub.<span class="string">`subjectno`</span></span><br><span class="line"><span class="keyword">WHERE</span> sub.<span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'%数据库结构%'</span></span><br></pre></td></tr></table></figure>

<h3 id="4-5-分页和排序"><a href="#4-5-分页和排序" class="headerlink" title="4.5.分页和排序"></a>4.5.分页和排序</h3><h4 id="1-排序"><a href="#1-排序" class="headerlink" title="1.排序"></a>1.排序</h4><p>order by 某字段 desc/asc</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 思考题（查询参加 数据库结构 考试的同学信息：学号，学生姓名，科目名，分数）</span></span><br><span class="line"><span class="comment">--  根据成绩排序</span></span><br><span class="line"><span class="keyword">SELECT</span> s.<span class="string">`studentno`</span>,s.<span class="string">`studentname`</span>,sub.<span class="string">`subjectname`</span>,r.<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub</span><br><span class="line"><span class="keyword">ON</span> r.<span class="string">`subjectno`</span> = sub.<span class="string">`subjectno`</span></span><br><span class="line"><span class="keyword">WHERE</span> sub.<span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'%数据库结构%'</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="string">`studentresult`</span> <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure>

<h4 id="2-分页"><a href="#2-分页" class="headerlink" title="2.分页"></a>2.分页</h4><p>语法：limit 查询起始下标，页面大小       limit (n-1) * pageSize，pageSize</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 语法  limit 当前页面起始值，页面大小</span></span><br><span class="line"><span class="comment">-- 每页显示 5 条数据</span></span><br><span class="line"><span class="comment">-- limit 0,5   表示 1~5</span></span><br><span class="line"><span class="comment">-- limit 1,5   表示 2~6</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> s.<span class="string">`studentno`</span>,s.<span class="string">`studentname`</span>,sub.<span class="string">`subjectname`</span>,r.<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub</span><br><span class="line"><span class="keyword">ON</span> r.<span class="string">`subjectno`</span> = sub.<span class="string">`subjectno`</span></span><br><span class="line"><span class="keyword">WHERE</span> sub.<span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'%数据库结构%'</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="string">`studentresult`</span> <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 第一页 limit 0,5    (1-1) * 5</span></span><br><span class="line"><span class="comment">-- 第二页 limit 5,5    (2-1) * 5</span></span><br><span class="line"><span class="comment">-- 第三页 limit 10,5   (3-1) * 5</span></span><br><span class="line">    ...                  ...</span><br><span class="line"><span class="comment">-- 第n页 limit 15,5    (n-1) * pageSize</span></span><br><span class="line"><span class="comment">-- 【 pageSize 页面大小 】</span></span><br><span class="line"><span class="comment">-- 【 (n-1) * pageSize 当前页起始值 】</span></span><br><span class="line"><span class="comment">-- 【 n  当前页 】</span></span><br><span class="line"><span class="comment">-- 【 总数据/页面大小+1 总页数 】</span></span><br></pre></td></tr></table></figure>

<p>查询 C语言-3 课程成绩排名前十  并且分数要大于80 的学生信息（学号，姓名，课程名称，分数）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询 C语言-3 课程成绩排名前十  并且分数要&gt;=80 的学生信息（学号，姓名，课程名称，分数）</span></span><br><span class="line"><span class="keyword">SELECT</span> s.<span class="string">`studentno`</span>,s.<span class="string">`studentname`</span>,sub.<span class="string">`subjectname`</span>,r.<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub</span><br><span class="line"><span class="keyword">ON</span> r.<span class="string">`subjectno`</span> = sub.<span class="string">`subjectno`</span></span><br><span class="line"><span class="keyword">WHERE</span> sub.<span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'C语言-3'</span> </span><br><span class="line"><span class="keyword">and</span> r.<span class="string">`studentresult`</span> &gt;= <span class="number">80</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="string">`studentresult`</span> <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">10</span></span><br></pre></td></tr></table></figure>

<h3 id="4-6-子查询"><a href="#4-6-子查询" class="headerlink" title="4.6.子查询"></a>4.6.子查询</h3><p>where（这个值是计算出来的）</p>
<p>本质：==在where语句中在嵌套一个子查询语句==</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- ============== where 子查询 =============</span></span><br><span class="line"><span class="comment">-- 查询 数据库结构-1 的所有开始接触 学号，科目号，成绩   降序排序</span></span><br><span class="line"><span class="comment">-- 方式一 使用连接查询</span></span><br><span class="line"><span class="keyword">SELECT</span> s.<span class="string">`studentno`</span>,sub.<span class="string">`subjectno`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub</span><br><span class="line"><span class="keyword">ON</span> r.<span class="string">`subjectno`</span> = sub.<span class="string">`subjectno`</span></span><br><span class="line"><span class="keyword">WHERE</span> sub.<span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'数据库结构-1'</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="string">`studentresult`</span> <span class="keyword">DESC</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式二 使用子查询 (有里及外)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">`studentno`</span>,<span class="string">`subjectno`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`result`</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">`subjectno`</span> = (</span><br><span class="line">	<span class="keyword">SELECT</span> <span class="string">`subjectno`</span> <span class="keyword">FROM</span> SUBJECT</span><br><span class="line">	<span class="keyword">WHERE</span> <span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'数据库结构-1'</span> </span><br><span class="line">)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="string">`studentresult`</span> <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure>

<p>子查询部分</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">WHERE `subjectno` = (</span><br><span class="line">	<span class="keyword">SELECT</span> <span class="string">`subjectno`</span> <span class="keyword">FROM</span> SUBJECT</span><br><span class="line">	<span class="keyword">WHERE</span> <span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'数据库结构-1'</span> </span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>案例     高等数学-1   分数不少于80分的学号和姓名</p>
</blockquote>
<p>使用子查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 使用子查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span>=r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">WHERE</span> r.<span class="string">`studentresult`</span>&gt;=<span class="number">80</span></span><br><span class="line"><span class="keyword">AND</span> <span class="string">`subjectno`</span> =(</span><br><span class="line">	<span class="keyword">SELECT</span> <span class="string">`subjectno`</span> </span><br><span class="line">	<span class="keyword">FROM</span><span class="string">`subject`</span></span><br><span class="line">	<span class="keyword">WHERE</span> <span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'高等数学-1'</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>对比联表查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 分数不少于80分的学号和姓名</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span>=r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">WHERE</span> r.<span class="string">`studentresult`</span>&gt;=<span class="number">80</span></span><br><span class="line"><span class="comment">-- 在这个基础上 在限制一个科目  高等数学-1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span>=r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub</span><br><span class="line"><span class="keyword">ON</span> sub.<span class="string">`subjectno`</span> = r.<span class="string">`subjectno`</span></span><br><span class="line"><span class="keyword">WHERE</span> r.<span class="string">`studentresult`</span>&gt;=<span class="number">80</span></span><br><span class="line"><span class="keyword">AND</span> sub.<span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'高等数学-1'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用子查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span>=r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">WHERE</span> r.<span class="string">`studentresult`</span>&gt;=<span class="number">80</span></span><br><span class="line"><span class="keyword">AND</span> <span class="string">`subjectno`</span> =(</span><br><span class="line">	<span class="keyword">SELECT</span> <span class="string">`subjectno`</span> </span><br><span class="line">	<span class="keyword">FROM</span><span class="string">`subject`</span></span><br><span class="line">	<span class="keyword">WHERE</span> <span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'高等数学-1'</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>案例     查询课程为 高等数学-3 的分数不小于75 的同学的学号和姓名</p>
</blockquote>
<p>分别使用 联表查询、子查询 实现</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询课程为 高等数学-3 的分数不小于75 的同学的学号和姓名</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub</span><br><span class="line"><span class="keyword">ON</span> r.<span class="string">`subjectno`</span> = sub.<span class="string">`subjectno`</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">`studentresult`</span>&gt;=<span class="number">75</span> </span><br><span class="line"><span class="keyword">AND</span> <span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'高等数学-3'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 子查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">ON</span> s.<span class="string">`studentno`</span> = r.<span class="string">`studentno`</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">`studentresult`</span>&gt;=<span class="number">75</span> </span><br><span class="line"><span class="keyword">AND</span> <span class="string">`subjectno`</span> = (</span><br><span class="line">	<span class="keyword">SELECT</span> <span class="string">`subjectno`</span></span><br><span class="line">	<span class="keyword">FROM</span> <span class="string">`subject`</span></span><br><span class="line">	<span class="keyword">WHERE</span> <span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'高等数学-3'</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>对两个条件都使用子查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 两个条件都使用子查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> <span class="string">`studentno`</span>,<span class="string">`studentname`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> </span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">`studentno`</span> <span class="keyword">IN</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> <span class="string">`studentno`</span></span><br><span class="line">	<span class="keyword">FROM</span> <span class="string">`result`</span></span><br><span class="line">	<span class="keyword">WHERE</span> <span class="string">`studentresult`</span>&gt;=<span class="number">75</span> </span><br><span class="line">	<span class="keyword">AND</span> <span class="string">`subjectno`</span> = (</span><br><span class="line">		<span class="keyword">SELECT</span> <span class="string">`subjectno`</span></span><br><span class="line">		<span class="keyword">FROM</span> <span class="string">`subject`</span></span><br><span class="line">		<span class="keyword">WHERE</span> <span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'高等数学-3'</span></span><br><span class="line">	)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>练习    使用子查询 ：   查询 C语言-1 前五名同学的成绩   学号 姓名 分数</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 练习 查询 C语言-1 前五名同学的成绩   学号 姓名 分数</span></span><br><span class="line"><span class="keyword">SELECT</span>	s.<span class="string">`studentno`</span>,<span class="string">`studentname`</span>,<span class="string">`studentresult`</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`student`</span> s</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">ON</span> <span class="string">`studentresult`</span> <span class="keyword">IN</span> (</span><br><span class="line">	<span class="keyword">SELECT</span> <span class="string">`studentresult`</span></span><br><span class="line">	<span class="keyword">FROM</span> <span class="string">`result`</span></span><br><span class="line">	<span class="keyword">WHERE</span> <span class="string">`subjectno`</span> = (</span><br><span class="line">		<span class="keyword">SELECT</span> <span class="string">`subjectno`</span></span><br><span class="line">		<span class="keyword">FROM</span> <span class="string">`subject`</span></span><br><span class="line">		<span class="keyword">WHERE</span> <span class="string">`subjectname`</span> <span class="keyword">LIKE</span> <span class="string">'C语言-3'</span></span><br><span class="line">	)</span><br><span class="line">) </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> r.<span class="string">`studentresult`</span> <span class="keyword">DESC</span></span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">5</span></span><br></pre></td></tr></table></figure>

<h3 id="4-7-分组和过滤"><a href="#4-7-分组和过滤" class="headerlink" title="4.7.分组和过滤"></a>4.7.分组和过滤</h3><p>语法 ： GROUP BY 字段</p>
<p>where 在分组之前使用</p>
<p>having 在分组之后使用</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 查询不同课程的平均分，最高分，最低分</span></span><br><span class="line"><span class="keyword">SELECT</span> 	<span class="string">`subjectname`</span>,</span><br><span class="line">	<span class="keyword">AVG</span>(<span class="string">`studentresult`</span>) <span class="keyword">AS</span> <span class="string">'平均数'</span>,</span><br><span class="line">	<span class="keyword">MAX</span>(<span class="string">`studentresult`</span>) <span class="keyword">AS</span> <span class="string">'最高分'</span>,</span><br><span class="line">	<span class="keyword">MIN</span>(<span class="string">`studentresult`</span>) <span class="keyword">AS</span> <span class="string">'最低分'</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="string">`result`</span> r</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`subject`</span> sub</span><br><span class="line"><span class="keyword">ON</span> r.<span class="string">`subjectno`</span>= sub.<span class="string">`subjectno`</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> r.<span class="string">`subjectno`</span>   <span class="comment">-- 通过哪个字段来分组</span></span><br><span class="line"><span class="comment">-- 再此基础上 要求平均分大于80</span></span><br><span class="line"><span class="keyword">HAVING</span> 平均数 &gt; <span class="number">80</span>	<span class="comment">-- 分组之后使用 having 来过滤条件</span></span><br></pre></td></tr></table></figure>

<h3 id="4-select小结"><a href="#4-select小结" class="headerlink" title="4.select小结"></a>4.select小结</h3><p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200607204429763.png" alt="image-20200607204429763"></p>
<h2 id="5-MySQL函数"><a href="#5-MySQL函数" class="headerlink" title="5.MySQL函数"></a>5.MySQL函数</h2><p>官网： <a href="https://dev.mysql.com/doc/refman/5.7/en/" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/</a></p>
<h3 id="5-1-常用函数"><a href="#5-1-常用函数" class="headerlink" title="5.1.常用函数"></a>5.1.常用函数</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- ========= 常用函数 ========= </span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数学运算</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">ABS</span>(<span class="number">-8</span>)   <span class="comment">-- 绝对值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CEILING</span>(<span class="number">9.5</span>)  <span class="comment">-- 向上取整</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">FLOOR</span>(<span class="number">9.5</span>)  <span class="comment">-- 向下取整</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">RAND</span>()   <span class="comment">-- 返回一个0到1的随机数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SIGN</span>(<span class="number">10</span>)   <span class="comment">-- 返回一个数值的符号   输入0 返回0   负数返回 -1  整数返回 1 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 字符串函数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CHAR_LENGTH</span>(<span class="string">'伯格曼的假面'</span>)  <span class="comment">-- 字符串长度</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CONCAT</span>(<span class="string">'张三'</span>,<span class="string">'打'</span>,<span class="string">'李四'</span>)   <span class="comment">-- 拼接字符串</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">INSERT</span>(<span class="string">'张三想打李四'</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="string">'三丰不想'</span>)   <span class="comment">-- 替换字符串  从某个位置开始，替换 n 个字符串</span></span><br><span class="line">					       <span class="comment">-- 2,2 代表从 第二个字符开始，替换两个字符</span></span><br><span class="line">								<span class="comment">-- "三想"  ==&gt;  "三丰不想"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">UPPER</span>(<span class="string">'Gokudu'</span>)	<span class="comment">-- 大写</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LOWER</span>(<span class="string">'Gokudu'</span>)	<span class="comment">-- 小写</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">INSTR</span>(<span class="string">'gokudu'</span>,<span class="string">'u'</span>)  <span class="comment">-- 返回第一次出现的 子串 的索引</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUBSTR</span>(<span class="string">'伯格曼和塔可夫斯基'</span>,<span class="number">5</span>,<span class="number">5</span>)   <span class="comment">-- 返回指定字符串  第五位开始，截取五个字符</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">REPLACE</span>(<span class="string">'伯格曼和塔可夫斯基走到一起，伯格曼说'</span>,<span class="string">'伯格曼'</span>,<span class="string">'沟口健二'</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">REVERSE</span>(<span class="string">'abcdefg'</span>)  <span class="comment">-- 反转</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询姓周的同学  改为  邹</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">REPLACE</span>(studentname,<span class="string">'周'</span>,<span class="string">'邹'</span>)</span><br><span class="line"><span class="keyword">FROM</span> student </span><br><span class="line"><span class="keyword">WHERE</span> studentname <span class="keyword">LIKE</span> <span class="string">'%周%'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 时间和日期函数 (重点)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURRENT_DATE</span>()	<span class="comment">-- 获取当前时间</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CURDATE</span>()	<span class="comment">-- 获取当前时间</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NOW</span>()	  <span class="comment">-- 获取当前时间(毫秒)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LOCALTIME</span>() <span class="comment">-- 本地时间</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SYSDATE</span>()    <span class="comment">-- 系统时间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(<span class="keyword">CURRENT_DATE</span>())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MONTH</span>(<span class="keyword">CURRENT_DATE</span>())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DAY</span>(<span class="keyword">CURRENT_DATE</span>())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">HOUR</span>(<span class="keyword">NOW</span>())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MINUTE</span>(<span class="keyword">NOW</span>())</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SECOND</span>(<span class="keyword">NOW</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 系统</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SYSTEM_USER</span>()</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>()</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">VERSION</span>()</span><br></pre></td></tr></table></figure>



<h3 id="5-2-聚合函数-常用"><a href="#5-2-聚合函数-常用" class="headerlink" title="5.2.聚合函数(常用)"></a>5.2.聚合函数(常用)</h3><table>
<thead>
<tr>
<th>函数名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>count（）</td>
<td>计数</td>
</tr>
<tr>
<td>sum()</td>
<td>求和</td>
</tr>
<tr>
<td>avg()</td>
<td>平均值</td>
</tr>
<tr>
<td>max()</td>
<td>最大值</td>
</tr>
<tr>
<td>min()</td>
<td>最小值</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- ============ 聚合函数 =============</span></span><br><span class="line"><span class="comment">-- 查询一个表中有多少条记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(studentname) <span class="keyword">from</span> student;  <span class="comment">-- count(指定列/字段)  会忽略所有null  </span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> student;  <span class="comment">-- count(*) -- 不会忽略null	</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> student;  <span class="comment">-- count(1) -- 不会忽略null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sum</span>(<span class="string">`studentresult`</span>) <span class="keyword">as</span> <span class="string">'总和'</span> <span class="keyword">from</span> <span class="string">`result`</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(<span class="string">`studentresult`</span>) <span class="keyword">as</span> <span class="string">'平均数'</span> <span class="keyword">from</span> <span class="string">`result`</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">max</span>(<span class="string">`studentresult`</span>) <span class="keyword">as</span> <span class="string">'最高分'</span> <span class="keyword">from</span> <span class="string">`result`</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">min</span>(<span class="string">`studentresult`</span>) <span class="keyword">as</span> <span class="string">'最低分'</span> <span class="keyword">from</span> <span class="string">`result`</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select(*)与select(1) 在InnoDB中性能没有任何区别，处理方式相同。</span><br><span class="line">官方文档描述如下：InnoDB handles SELECT COUNT(*) and SELECT COUNT(1) operations in the same way. There is no performance difference.</span><br></pre></td></tr></table></figure>

<p>博客：MySQL count(*),count(1),count(field)区别、性能差异及优化建议</p>
<p><a href="https://baijiahao.baidu.com/s?id=1660139166311547332&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">https://baijiahao.baidu.com/s?id=1660139166311547332&amp;wfr=spider&amp;for=pc</a></p>
<h3 id="5-3-数据库级别的MD5加密（扩展）"><a href="#5-3-数据库级别的MD5加密（扩展）" class="headerlink" title="5.3.数据库级别的MD5加密（扩展）"></a>5.3.数据库级别的MD5加密（扩展）</h3><p>MD5相比其前身，主要增强了算法复杂度和==<strong>不可逆性</strong>==</p>
<p>MD5不可逆，具体的值的md5不变</p>
<p>所以一些常用的数据转为md5不安全，有人会把这些常见做成一个数据字典（md5加密后的值：加密前的值）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- ============ 测试MD5加密 ===============</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`testmd5`</span>(</span><br><span class="line">   <span class="string">`id`</span> <span class="built_in">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">   <span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">   <span class="string">`pwd`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">   PRIMARY <span class="keyword">KEY</span>(<span class="string">`id`</span>)</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 明文密码</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">'zhangsan'</span>,<span class="string">'123456'</span>),(<span class="number">2</span>,<span class="string">'lisi'</span>,<span class="string">'123456'</span>),(<span class="number">3</span>,<span class="string">'wangwu'</span>,<span class="string">'123456'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- md5加密,插入的时候加密 </span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> testmd5 <span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">'zhangsan'</span>,<span class="keyword">MD5</span>(<span class="string">'123456'</span>))</span><br><span class="line"><span class="comment">-- 校验，将用户传递过来的密码，进行MD5加密，然后和数据库中插入时加密过的密码进行对比</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> testmd5 <span class="keyword">WHERE</span> <span class="keyword">NAME</span>=<span class="string">'zhangsan'</span> <span class="keyword">AND</span> pwd=<span class="keyword">MD5</span>(<span class="string">'123456'</span>)</span><br></pre></td></tr></table></figure>



<h2 id="6-事务"><a href="#6-事务" class="headerlink" title="6.事务"></a>6.事务</h2><h3 id="6-1-什么是事务"><a href="#6-1-什么是事务" class="headerlink" title="6.1.什么是事务"></a>6.1.什么是事务</h3><p>==要么都成功，要么都失败==</p>
<p>1.SQL执行   A给B转账       A 1000  –&gt; 200           B  300</p>
<p>2.SQL执行  B收到A的钱     A  800                          B  500</p>
<blockquote>
<p>事务原则：ACID原则  ：　原子性，一致性，隔离性，持久性　　</p>
</blockquote>
<p>参考博客：<a href="https://blog.csdn.net/dengjili/article/details/82468576" target="_blank" rel="noopener">https://blog.csdn.net/dengjili/article/details/82468576</a></p>
<p><strong>原子性（Atomicity）</strong></p>
<p>要么都成功，要么都失败</p>
<p><strong>一致性（Consistency）</strong><br>事务前后数据的完整性必须保持一致。（别人转账中，双方的账户总金额不变）   </p>
<p><strong>隔离性（Isolation）</strong><br>事务的隔离性是多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他事务的操作数据所干扰，多个并发事务之间要相互隔离。</p>
<p><strong>持久性（Durability）</strong><br>持久性是指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来即使数据库发生故障也不应该对其有任何影响</p>
<blockquote>
<p>隔离所导致的一些问题</p>
</blockquote>
<p><strong>脏读：</strong></p>
<p>指一个事务读取了另一个事务未提交的数据。</p>
<p> ==例子：==</p>
<p>A  500  B 200   C 200</p>
<p>A –&gt; B  200       </p>
<p>C—&gt;B  100     </p>
<p> C在 A转给B 200 未提交时 ，自己转给B 100 ，那么他读到的是 B 300  ，C 100</p>
<p>然后 A转给B 事务提交之后 ， A 300    B 400         （那么 总值会有 100 丢失）   </p>
<p><strong>不可重复读：</strong></p>
<p>在一个事务内读取表中的某一行数据，多次读取结果不同。（不一定是错误的，只是该值已经被修改并且提交事务了）</p>
<p><strong>虚读、幻读：</strong></p>
<p>指在一个事务内读取到别人的事务插入的数据，导致前后不一致。（有别的事务插入新数据）</p>
<blockquote>
<p>执行事务</p>
</blockquote>
<p>执行流程：</p>
<img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200607221025093.png" alt="image-20200607221025093" style="zoom:80%;" />

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- ============= 事务 ==============</span></span><br><span class="line"><span class="comment">-- mysql默认开启事务自动提交</span></span><br><span class="line"><span class="keyword">SET</span> autocommit = <span class="number">0</span>  <span class="comment">-- 关闭自动提交</span></span><br><span class="line"><span class="keyword">SET</span> autocommit = <span class="number">1</span>  <span class="comment">-- 开启 (默认)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 手动开启事务</span></span><br><span class="line"><span class="keyword">SET</span> autocommit = <span class="number">0</span>  <span class="comment">-- 关闭自动提交</span></span><br><span class="line"><span class="comment">-- 事务开启</span></span><br><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span> <span class="comment">-- 标记一个事务的开始，从这个之后的sql都在同一个事务内</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> ...</span><br><span class="line"><span class="keyword">INSERT</span> ...</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交: 持久化（成功）</span></span><br><span class="line"><span class="keyword">COMMIT</span></span><br><span class="line"><span class="comment">-- 回滚：回到原来的样子（失败）</span></span><br><span class="line"><span class="keyword">ROLLBACK</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 事务结束</span></span><br><span class="line"> <span class="keyword">SET</span> autocommit = <span class="number">1</span>  <span class="comment">-- 开启自动提交 (回到默认)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 了解</span></span><br><span class="line"><span class="keyword">SAVEPOINT</span> <span class="comment">-- 设置事务的保存点</span></span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> <span class="keyword">SAVEPOINT</span> <span class="comment">--  回滚到保存点</span></span><br><span class="line"><span class="keyword">RELEASE</span> <span class="keyword">SAVEPOINT</span>  <span class="comment">-- 撤销保存点</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>模拟转账    </p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 模拟转账  事务</span></span><br><span class="line"><span class="keyword">SET</span> autocommit = <span class="number">0</span> <span class="comment">-- 关闭自动提交事务 </span></span><br><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>  <span class="comment">-- 开启一个事务 (一组事务)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="string">`account`</span> <span class="keyword">SET</span> <span class="string">`money`</span> = <span class="string">`money`</span><span class="number">-500</span> <span class="keyword">WHERE</span> <span class="string">`name`</span>=<span class="string">'A'</span>  <span class="comment">-- A减500元</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="string">`account`</span> <span class="keyword">SET</span> <span class="string">`money`</span> = <span class="string">`money`</span>+<span class="number">500</span> <span class="keyword">WHERE</span> <span class="string">`name`</span>=<span class="string">'B'</span>  <span class="comment">-- B加500元</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>       <span class="comment">-- 提交事务，就被持久化，回滚也没用</span></span><br><span class="line"><span class="keyword">ROLLBACK</span>     <span class="comment">-- 回滚事务</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> autocommit = <span class="number">1</span>    <span class="comment">-- 恢复默认自动提交事务</span></span><br></pre></td></tr></table></figure>

<h2 id="7-索引"><a href="#7-索引" class="headerlink" title="7.索引"></a>7.索引</h2><blockquote>
<p>MySQL官方对索引的定义为：索引（Index）是帮助<strong>MySQL高效获取数据</strong>的<strong>数据结构</strong>。</p>
<p>提取句子主干，就可以得到索引的本质：索引是数据结构。</p>
</blockquote>
<h3 id="7-1-索引的分类"><a href="#7-1-索引的分类" class="headerlink" title="7.1.索引的分类"></a>7.1.索引的分类</h3><ul>
<li>主键索引   (PRIMARY KEY)<ul>
<li>唯一的标识。<strong>主键</strong> 不可用重复</li>
</ul>
</li>
<li>唯一索引   (UNIQUE KEY)<ul>
<li>、避免重复的列出现。<strong>唯一索引</strong> 可以重复，多个列都可以标识为 <strong>唯一索引</strong></li>
</ul>
</li>
<li>常规索引   (KEY/INDEX)<ul>
<li>默认的。KEY/INDEX 关键字设置</li>
</ul>
</li>
<li>全文索引   (FULLTEXT)<ul>
<li>在特定的数据库引擎下才有（MyISAM）</li>
<li>快速定位数据</li>
</ul>
</li>
</ul>
<blockquote>
<p>基础语法</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> <span class="comment">-- 索引的使用</span></span><br><span class="line"><span class="comment">-- 1.在创建表的时候，给字段增加索引</span></span><br><span class="line"><span class="comment">-- 2.在已经创建的表中，增加索引</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 显示所有索引信息</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">INDEX</span> <span class="keyword">FROM</span> student</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 增加一个全文索引（其他索引同理）     索引名（列名）</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">ADD</span> FULLTEXT <span class="keyword">INDEX</span> <span class="string">`studentname`</span>(<span class="string">`studentname`</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建一个索引  id_表明_字段名</span></span><br><span class="line"><span class="comment">-- CREATE INDEX 索引名 ON 表(字段);</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> id_app_user_name <span class="keyword">ON</span> app_user(<span class="string">`name`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student;  <span class="comment">--  非全文索引</span></span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">MATCH</span>(studentname) AGAINST(<span class="string">'李'</span>);</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200607225056611.png" alt="image-20200607225056611"></p>
<h3 id="7-2-测试索引"><a href="#7-2-测试索引" class="headerlink" title="7.2.测试索引"></a>7.2.测试索引</h3><ul>
<li>新建数据库，添加100万条数据进行测试</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`app_user`</span> (</span><br><span class="line">	<span class="string">`id`</span> <span class="built_in">BIGINT</span>(<span class="number">20</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">	<span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'用户昵称'</span>,</span><br><span class="line">	<span class="string">`email`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户邮箱'</span>,</span><br><span class="line">	<span class="string">`phone`</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'手机号'</span>,</span><br><span class="line">	<span class="string">`gender`</span> <span class="built_in">TINYINT</span>(<span class="number">4</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'性别（0：男，1：女）'</span>,</span><br><span class="line">	<span class="string">`password`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'密码'</span>,</span><br><span class="line">	<span class="string">`age`</span> <span class="built_in">TINYINT</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'年龄'</span>,</span><br><span class="line">	<span class="string">`create_time`</span> DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span>,</span><br><span class="line">	<span class="string">`update_time`</span> <span class="built_in">TIMESTAMP</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span>,</span><br><span class="line">	PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'app用户表'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入100万条数据</span></span><br><span class="line">DELIMITER $$  <span class="comment">-- 写函数之前必写，标志</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> mockdatatest()</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="built_in">INT</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">   <span class="keyword">DECLARE</span> <span class="keyword">num</span> <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">1000000</span>;</span><br><span class="line">   <span class="keyword">DECLARE</span> i <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">   WHILE i&lt;num DO	</span><br><span class="line">	<span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`app_user`</span>(<span class="string">`name`</span>,<span class="string">`email`</span>,<span class="string">`phone`</span>,<span class="string">`gender`</span>,<span class="string">`password`</span>,<span class="string">`age`</span>)<span class="keyword">VALUES</span> (<span class="keyword">CONCAT</span>(<span class="string">'用户'</span>,i),<span class="string">'15613114@qq.com'</span>,<span class="string">'13076451252'</span>,<span class="number">0</span>,<span class="keyword">UUID</span>(),<span class="keyword">FLOOR</span>(<span class="keyword">RAND</span>()*<span class="number">110</span>));	</span><br><span class="line">	<span class="keyword">SET</span> i=i+<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">END</span> <span class="keyword">WHILE</span>; </span><br><span class="line">   RETURN i;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> mockdatatest();</span><br></pre></td></tr></table></figure>

<ul>
<li>执行sql</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`app_user`</span> <span class="keyword">where</span> <span class="string">`name`</span> <span class="keyword">like</span> <span class="string">'用户9999'</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200608003159920.png" alt="image-20200608003159920"></p>
<ul>
<li>expain </li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`app_user`</span> <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'用户9999'</span>;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200608003422666.png" alt="image-20200608003422666"></p>
<ul>
<li>创建一个索引</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建一个索引  id_表明_字段名</span></span><br><span class="line"><span class="comment">-- CREATE INDEX 索引名 ON 表(字段);</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> id_app_user_name <span class="keyword">ON</span> app_user(<span class="string">`name`</span>);</span><br></pre></td></tr></table></figure>

<ul>
<li>测试</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`app_user`</span> <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'用户9999'</span>;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200608004121096.png" alt="image-20200608004121096"></p>
<ul>
<li>expain </li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`app_user`</span> <span class="keyword">WHERE</span> <span class="string">`name`</span> <span class="keyword">LIKE</span> <span class="string">'用户9999'</span>;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200608004152612.png" alt="image-20200608004152612"></p>
<p>==索引在数据量较小的时候，感觉不到差别==</p>
<p>==但是在数据量很大的时候，区别十分明显==</p>
<h3 id="7-3-为什么索引能提高查询速度"><a href="#7-3-为什么索引能提高查询速度" class="headerlink" title="7.3.为什么索引能提高查询速度"></a>7.3.为什么索引能提高查询速度</h3><p>博客： [<a href="https://github.com/GokuDU/JavaGuide/blob/master/docs/database/MySQL%20Index.md]" target="_blank" rel="noopener">https://github.com/GokuDU/JavaGuide/blob/master/docs/database/MySQL%20Index.md]</a>(<a href="https://github.com/GokuDU/JavaGuide/blob/master/docs/database/MySQL" target="_blank" rel="noopener">https://github.com/GokuDU/JavaGuide/blob/master/docs/database/MySQL</a> Index.md)</p>
<p><img src="https://camo.githubusercontent.com/57a746bf254e100c3fd0d2691d172df5c29592eb/687474703a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f31382d31302d322f32383535393432312e6a7067" alt="MySQL的基本存储结构是页"></p>
<p><img src="https://camo.githubusercontent.com/a0e0c5b1377f6ab52365479c52313f4238550d31/687474703a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f31382d31302d322f38323035333133342e6a7067" alt="img"></p>
<ul>
<li><strong>各个数据页可以组成一个双向链表</strong></li>
<li>每个数据页中的记录又可以组成一个单向链表<ul>
<li>每个数据页都会为存储在它里边儿的记录生成一个页目录，在通过主键查找某条记录的时候可以在页目录中使用二分法快速定位到对应的槽，然后再遍历该槽对应分组中的记录即可快速找到指定的记录</li>
<li>以其他列(非主键)作为搜索条件：只能从最小记录开始依次遍历单链表中的每条记录。</li>
</ul>
</li>
</ul>
<p>所以说，如果我们写select * from user where indexname = ‘xxx’这样没有进行任何优化的sql语句，默认会这样做：</p>
<ol>
<li><strong>定位到记录所在的页：需要遍历双向链表，找到所在的页</strong></li>
<li><strong>从所在的页内中查找相应的记录：由于不是根据主键查询，只能遍历所在页的单链表了</strong></li>
</ol>
<p>很明显，在数据量很大的情况下这样查找会很慢！这样的时间复杂度为O（n）。</p>
<h3 id="使用索引之后"><a href="#使用索引之后" class="headerlink" title="使用索引之后"></a>使用索引之后</h3><p>索引做了些什么可以让我们查询加快速度呢？其实就是<strong>将无序的数据变成有序(相对)</strong>：</p>
<p><img src="https://camo.githubusercontent.com/83e4b2a638e8352a21feafeafe97cbad0fc2a335/687474703a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f31382d31302d322f353337333038322e6a7067" alt="img"></p>
<p>要找到id为8的记录简要步骤：</p>
<p><img src="https://camo.githubusercontent.com/c63688b141c3562bbf4fb4b719ab027c6dea91e9/687474703a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f31382d31302d322f38393333383034372e6a7067" alt="img"></p>
<p>很明显的是：没有用索引我们是需要遍历双向链表来定位对应的页，现在通过 <strong>“目录”</strong> 就可以很快地定位到对应的页上了！（二分查找，时间复杂度近似为O(logn)）</p>
<p>其实底层结构就是B+树，B+树作为树的一种实现，能够让我们很快地查找出对应的记录。</p>
<h3 id="7-4-索引原则"><a href="#7-4-索引原则" class="headerlink" title="7.4.索引原则"></a>7.4.索引原则</h3><ul>
<li>索引不是越多越好</li>
<li>不对进程变动数据加索引</li>
<li>小数据的表不需要加索引</li>
<li>索引一般用来加在查询的字段</li>
</ul>
<blockquote>
<p>索引的数据结构</p>
</blockquote>
<p>Btree  ： InnoDB 的默认类型</p>
<p>B+Tree</p>
<p>博客： <a href="https://blog.codinglabs.org/articles/theory-of-mysql-index.html" target="_blank" rel="noopener">https://blog.codinglabs.org/articles/theory-of-mysql-index.html</a></p>
<p>​             [<a href="https://github.com/GokuDU/JavaGuide/blob/master/docs/database/MySQL%20Index.md]" target="_blank" rel="noopener">https://github.com/GokuDU/JavaGuide/blob/master/docs/database/MySQL%20Index.md]</a>(<a href="https://github.com/GokuDU/JavaGuide/blob/master/docs/database/MySQL" target="_blank" rel="noopener">https://github.com/GokuDU/JavaGuide/blob/master/docs/database/MySQL</a> Index.md)</p>
<h2 id="8-数据库备份"><a href="#8-数据库备份" class="headerlink" title="8.数据库备份"></a>8.数据库备份</h2><h3 id="8-1-用户管理"><a href="#8-1-用户管理" class="headerlink" title="8.1.用户管理"></a>8.1.用户管理</h3><blockquote>
<p>SQLyog 可视化管理</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200608020931902.png" alt="image-20200608020931902"></p>
<blockquote>
<p>命令操作</p>
</blockquote>
<p>用户表:  mysql.user</p>
<p>本质：对这种表进行增删改查</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建用户 create user 用户名 identified by '密码'</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> gokudu <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'123456'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改当前用户密码</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span>=<span class="keyword">PASSWORD</span>(<span class="string">'123456'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改指定用户密码</span></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> gokudu = <span class="keyword">PASSWORD</span>(<span class="string">'123456'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 重命名 rename user 旧用户名 to 新的用户名</span></span><br><span class="line"><span class="keyword">RENAME</span> <span class="keyword">USER</span> gokudu <span class="keyword">TO</span> gokufriday</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用户授权  授予全部权限   grant 全部的权限 on 全部库.全部表 to gokufriday</span></span><br><span class="line"><span class="comment">-- all privileges 除了给其他人授权不能没有权限  其他都能干 </span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> gokufriday</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询权限</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> gokufriday  <span class="comment">-- 查看指定用户的权限</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> root@localhost	</span><br><span class="line"><span class="comment">-- ROOT用户： GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' WITH GRANT OPTION</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 撤销权限  revoke 全部的权限 on 全部库.全部表 from gokufriday</span></span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">FROM</span> gokufriday</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除用户</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> gokufriday</span><br></pre></td></tr></table></figure>

<h3 id="8-2-MySQL-备份"><a href="#8-2-MySQL-备份" class="headerlink" title="8.2.MySQL 备份"></a>8.2.MySQL 备份</h3><p>需要备份的原因</p>
<ul>
<li>保证数据不丢失</li>
<li>数据转移</li>
</ul>
<p>MySQL备份的方式</p>
<ul>
<li>使用可视化工具导出</li>
<li>使用命令行导出   mysqldump</li>
</ul>
<p>导出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mysqldump -h主机 -u用户 -p密码 数据库 表名 &gt;物理磁盘位置/文件名</span></span><br><span class="line">mysqldump -hlocalhost -uroot -p123456 school student &gt;d:/student.sql</span><br><span class="line">mysqldump: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出多张表</span></span><br><span class="line"><span class="comment"># mysqldump -h主机 -u用户 -p密码 数据库 表1 表2 表三 ... &gt;物理磁盘位置/文件名</span></span><br><span class="line">&gt;mysqldump -hlocalhost -uroot -p123456 school student result grade &gt;d:/b.sql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出某个数据库</span></span><br><span class="line">mysqldump -hlocalhost -uroot -p123456 school &gt;d:/c.sql</span><br></pre></td></tr></table></figure>

<p>导入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在登录的情况下，使用source</span></span><br><span class="line"><span class="comment"># 物理磁盘位置/文件名</span></span><br><span class="line"><span class="built_in">source</span> d:/c.sql</span><br></pre></td></tr></table></figure>

<h2 id="9-规范数据库设计"><a href="#9-规范数据库设计" class="headerlink" title="9.规范数据库设计"></a>9.规范数据库设计</h2><h3 id="9-1为什么需要设计"><a href="#9-1为什么需要设计" class="headerlink" title="9.1为什么需要设计"></a>9.1为什么需要设计</h3><p>当数据库比较复杂的时候，更需要规范设计</p>
<p><strong>糟糕的数据库设计：</strong></p>
<ul>
<li>数据冗余，浪费空间</li>
<li>数据库插入和删除比较麻烦’异常【使用物理外键】</li>
<li>程序的性能差</li>
</ul>
<p><strong>良好的数据库设计：</strong></p>
<ul>
<li>节省内存空间</li>
<li>保证数据库的完整性</li>
<li>方便开发</li>
</ul>
<p><strong>软件开发中，关于数据库的设计</strong></p>
<ul>
<li>分析需求：分析业务和需要处理的数据库的需求</li>
<li>概要设计：设计关系图 E-R图</li>
</ul>
<p><strong>设计数据库的步骤：（个人博客）</strong></p>
<h3 id="9-2-三大范式"><a href="#9-2-三大范式" class="headerlink" title="9.2.三大范式"></a>9.2.三大范式</h3><p>为什么要数据规范化</p>
<ul>
<li>信息重复</li>
<li>更新异常</li>
<li>插入异常<ul>
<li>无法正常显示信息</li>
</ul>
</li>
<li>删除异常<ul>
<li>丢失有效信息</li>
</ul>
</li>
</ul>
<blockquote>
<p>三大范式</p>
</blockquote>
<p><strong>第一范式（1NF）</strong></p>
<p>==原子性==：保证数据表的每一列都是不可分割的==原子性==数据项</p>
<p>举例说明：</p>
<p>==在一个字段中，不能存放多个属性的信息==</p>
<p>比如，在一个家庭信息列中，既有家庭人数信息，又有家庭住址信息</p>
<p><strong>第二范式（2NF）</strong></p>
<p>前提：满足第一范式</p>
<p>每张表值描述一件事情</p>
<p><strong>第三范式（3NF）</strong></p>
<p>前提：满足第一范式和第二范式</p>
<p>确保数据表中的每一列数据都==和主键直接相关==，而不能间接相关</p>
<p>举例说明：</p>
<p><img src="https://images2018.cnblogs.com/blog/1218459/201809/1218459-20180909211311408-1364899740.png" alt="img"></p>
<p>上表中，所有属性都完全依赖于学号，所以满足第二范式，但是“班主任性别”和“班主任年龄”直接依赖的是“班主任姓名”，</p>
<p>而不是主键“学号”，所以需做如下调整：</p>
<p><img src="https://images2018.cnblogs.com/blog/1218459/201809/1218459-20180909211539242-1391100354.png" alt="img"> <img src="https://images2018.cnblogs.com/blog/1218459/201809/1218459-20180909211602202-1069383439.png" alt="img"></p>
<p>这样以来，就满足了第三范式的要求。</p>
<p>ps:如果把上表中的班主任姓名改成班主任教工号可能更确切，更符合实际情况，不过只要能理解就行。</p>
<p><strong>规范性和性能的问题</strong></p>
<p>关联查询的表不能超过三张表</p>
<ul>
<li>考虑商业化的需求和 目标（成本，用户体验），考虑数据库的性能</li>
<li>在规范性能问题的时候，设当考虑一下数据库的规范性</li>
<li>故意给某些表增加一些冗余的字段（从多表查询变为单表查询）</li>
<li>故意增加一些计算列（从大数据降为小数据量的查询：==索引==）</li>
</ul>
<h2 id="10-JDBC（重点）"><a href="#10-JDBC（重点）" class="headerlink" title="10.JDBC（重点）"></a>10.JDBC（重点）</h2><h3 id="10-1-数据库驱动"><a href="#10-1-数据库驱动" class="headerlink" title="10.1.数据库驱动"></a>10.1.数据库驱动</h3><p>驱动：显卡、声卡、数据库都需要驱动</p>
<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200608125023672.png" alt="image-20200608125023672"></p>
<p>编写的程序通过 数据库 驱动，和数据库打交道</p>
<h3 id="10-2-JDBC"><a href="#10-2-JDBC" class="headerlink" title="10.2.JDBC"></a>10.2.JDBC</h3><p>SUN公司为了简化开发人员的操作（对数据库的统一），提供一个规范（Java操作数据库规范），也就是JDBC（Java Database Connectivity）</p>
<p>这些规范的实现由具体的厂商去做</p>
<p>而对于开发人员，只需要掌握JDBC接口的操作</p>
<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200608130149447.png" alt="image-20200608130149447"></p>
<p>需要的包：</p>
<p>java.sql</p>
<p>javax.sql</p>
<p>导入数据库驱动包： mysql-connector-java-5.1.47.jar</p>
<h3 id="10-3-第一个JDBC程序"><a href="#10-3-第一个JDBC程序" class="headerlink" title="10.3.第一个JDBC程序"></a>10.3.第一个JDBC程序</h3><ul>
<li>新建一个数据库</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> jdbcstudy <span class="built_in">character</span> <span class="keyword">set</span> utf8 <span class="keyword">collate</span> utf8_general_ci;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> jdbcstudy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">users</span>(</span><br><span class="line">    <span class="string">`id`</span> <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line">    <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">40</span>),</span><br><span class="line">    <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">40</span>),</span><br><span class="line">    <span class="string">`email`</span> <span class="built_in">varchar</span>(<span class="number">60</span>),</span><br><span class="line">    <span class="string">`birthday`</span> <span class="built_in">date</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">users</span>(<span class="string">`id`</span>,<span class="string">`name`</span>,<span class="string">`password`</span>,<span class="string">`email`</span>,<span class="string">`birthday`</span>)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="string">'zhangsan'</span>,<span class="string">'123456'</span>,<span class="string">'15615165@qq.com'</span>,<span class="keyword">now</span>()),</span><br><span class="line">      (<span class="number">2</span>,<span class="string">'lisi'</span>,<span class="string">'123456'</span>,<span class="string">'dsdadsd@144.com'</span>,<span class="keyword">now</span>()),</span><br><span class="line">      (<span class="number">3</span>,<span class="string">'wangwu'</span>,<span class="string">'123456'</span>,<span class="string">'swdfffsa@q3.com'</span>,<span class="keyword">now</span>())</span><br></pre></td></tr></table></figure>

<ul>
<li>java</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 第一个JDBC程序</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcFirstDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">        <span class="comment">// 1.加载驱动</span></span><br><span class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.用户信息和url</span></span><br><span class="line">        String url=<span class="string">"jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true"</span>;</span><br><span class="line">        String username=<span class="string">"root"</span>;</span><br><span class="line">        String password=<span class="string">"123456"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.连接成功，返回一个数据库对象</span></span><br><span class="line">        Connection connection = DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.执行SQL的对象</span></span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5.执行SQL的对象 来 执行SQL</span></span><br><span class="line">        String sql=<span class="string">"select * from users"</span>;</span><br><span class="line">        ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">            System.out.println(<span class="string">"id:"</span>+resultSet.getObject(<span class="string">"id"</span>));</span><br><span class="line">            System.out.println(<span class="string">"name:"</span>+resultSet.getObject(<span class="string">"name"</span>));</span><br><span class="line">            System.out.println(<span class="string">"pwd:"</span>+resultSet.getObject(<span class="string">"password"</span>));</span><br><span class="line">            System.out.println(<span class="string">"email:"</span>+resultSet.getObject(<span class="string">"email"</span>));</span><br><span class="line">            System.out.println(<span class="string">"birth:"</span>+resultSet.getObject(<span class="string">"birthday"</span>));</span><br><span class="line">            System.out.println(<span class="string">"=========++++++++==========++++++++++==========="</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6.释放资源</span></span><br><span class="line">        resultSet.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>步骤：</p>
<p>1.加载驱动</p>
<p>2.连接数据库  （输入用户信息）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DriverManager.getConnection(url, username, password);</span><br></pre></td></tr></table></figure>

<p>3.获取执行sql的对象  Statement</p>
<p>4.通过 Statement 对象 来 执行sql ，获得返回的结果集</p>
<p>5.释放资源</p>
<blockquote>
<p>DriverManager</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.加载驱动</span></span><br><span class="line"><span class="comment">// DriverManager.registerDriver(new com.mysql.jdbc.Driver());   </span></span><br><span class="line"><span class="comment">// 没必要注册，源码在静态代码块已经有这一句了，这样写就注册两次了</span></span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line"> Connection connection = DriverManager.getConnection(url, username, password);</span><br><span class="line"><span class="comment">//   事务提交  事务回滚   数据库设置自动提交</span></span><br><span class="line"></span><br><span class="line">connection.commit();</span><br><span class="line">connection.rollback();</span><br><span class="line">connection.setAutoCommit(<span class="keyword">true</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>url</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> String url=<span class="string">"jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// mysql -- 3306</span></span><br><span class="line"><span class="comment">// 协议://主机名：端口号/数据库名?参数1&amp;参数2&amp;参数3</span></span><br><span class="line"><span class="comment">// oralce -- 1521</span></span><br><span class="line"><span class="comment">// jdbc:oralce:thin:@localhost:1521:sid</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>Statement 执行sql的对象</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String sql=<span class="string">"select * from users"</span>;	<span class="comment">//	编写SQL，尽量先测试成功，在使用</span></span><br><span class="line"></span><br><span class="line">statement.executeQuery(sql);    <span class="comment">// 查询  返回resultSet</span></span><br><span class="line">statement.execute(sql);     <span class="comment">// 执行任何SQL</span></span><br><span class="line">statement.executeUpdate(sql);  <span class="comment">// 插入、更新、删除  返回一个受影响的行数</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>resultSet</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 如果不知道列的类型的情况下</span></span><br><span class="line">resultSet.getObject(<span class="string">"column_01"</span>);</span><br><span class="line"><span class="comment">// 如果知道列的类型，可以直接指定类型</span></span><br><span class="line">resultSet.getInt(<span class="string">"column_01"</span>);</span><br><span class="line">resultSet.getString(<span class="string">"column_01"</span>);</span><br><span class="line">resultSet.getFloat(<span class="string">"column_01"</span>);</span><br><span class="line">resultSet.getDate(<span class="string">"column_01"</span>);</span><br></pre></td></tr></table></figure>

<ul>
<li>遍历，指针</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 遍历，指针</span></span><br><span class="line">resultSet.beforeFirst();      <span class="comment">// 移动到最前面</span></span><br><span class="line">resultSet.afterLast();        <span class="comment">// 移动到最后面</span></span><br><span class="line">resultSet.next();             <span class="comment">// 移动到下一个数据</span></span><br><span class="line">resultSet.previous();         <span class="comment">// 移动到前一行</span></span><br><span class="line">resultSet.absolute(row); <span class="comment">// 移动到指定行</span></span><br></pre></td></tr></table></figure>

<ul>
<li>第一个JDBC程序中的对应代码</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 5.执行SQL的对象 来 执行SQL</span></span><br><span class="line">String sql=<span class="string">"select * from users"</span>;</span><br><span class="line">ResultSet resultSet = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">    System.out.println(<span class="string">"id:"</span>+resultSet.getObject(<span class="string">"id"</span>));</span><br><span class="line">    System.out.println(<span class="string">"name:"</span>+resultSet.getObject(<span class="string">"name"</span>));</span><br><span class="line">    System.out.println(<span class="string">"pwd:"</span>+resultSet.getObject(<span class="string">"password"</span>));</span><br><span class="line">    System.out.println(<span class="string">"email:"</span>+resultSet.getObject(<span class="string">"email"</span>));</span><br><span class="line">    System.out.println(<span class="string">"birth:"</span>+resultSet.getObject(<span class="string">"birthday"</span>));</span><br><span class="line">    System.out.println(<span class="string">"=========++++++++==========++++++++++==========="</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>释放资源</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 释放资源</span></span><br><span class="line">resultSet.close();</span><br><span class="line">statement.close();</span><br><span class="line">connection.close();</span><br></pre></td></tr></table></figure>



<h3 id="10-4-Statement对象"><a href="#10-4-Statement对象" class="headerlink" title="10.4.Statement对象"></a>10.4.Statement对象</h3><p>编写增删改的方法，调用 ==executeUpdate（）==</p>
<blockquote>
<p>insert</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">st = conn.createStatement();</span><br><span class="line">String sql=<span class="string">"INSERT INTO users(`id`,`name`,`password`,`email`,`birthday`)\n"</span> +</span><br><span class="line">        <span class="string">"VALUES(5,'laoli','123456','lao5454@q2q.com','1977-06-13')"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = st.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.err.println(<span class="string">"[DEBUG]insert success"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>update</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">st = conn.createStatement();</span><br><span class="line">String sql=<span class="string">"update users set `name`='gokudu',`password`='112211' where id=5"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = st.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.err.println(<span class="string">"[DEBUG]update success"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>delete</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">st = conn.createStatement();</span><br><span class="line">String sql=<span class="string">"DELETE FROM users WHERE id=5"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = st.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.err.println(<span class="string">"[DEBUG]delete success"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Select</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">st = conn.createStatement();</span><br><span class="line">String sql=<span class="string">"select * from users where id=4"</span>;</span><br><span class="line"></span><br><span class="line">ResultSet resultSet = st.executeQuery(sql);</span><br><span class="line"><span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">    System.out.println(<span class="string">"id:"</span>+resultSet.getObject(<span class="string">"id"</span>));</span><br><span class="line">    System.out.println(<span class="string">"name:"</span>+resultSet.getObject(<span class="string">"name"</span>));</span><br><span class="line">    System.out.println(<span class="string">"pwd:"</span>+resultSet.getObject(<span class="string">"password"</span>));</span><br><span class="line">    System.out.println(<span class="string">"email:"</span>+resultSet.getObject(<span class="string">"email"</span>));</span><br><span class="line">    System.out.println(<span class="string">"birth:"</span>+resultSet.getObject(<span class="string">"birthday"</span>));</span><br><span class="line">    System.out.println(<span class="string">"=========++++++++==========++++++++++==========="</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="1-提取工具类"><a href="#1-提取工具类" class="headerlink" title="1.提取工具类"></a>1.提取工具类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver =<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url =<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username =<span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password =<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream resourceAsStream = 	JdbcUtils.class.getClassLoader().getResourceAsStream("db.properties");</span><br><span class="line">            Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">            properties.load(resourceAsStream);</span><br><span class="line"></span><br><span class="line">            driver = properties.getProperty(<span class="string">"driver"</span>);</span><br><span class="line">            url = properties.getProperty(<span class="string">"url"</span>);</span><br><span class="line">            username = properties.getProperty(<span class="string">"username"</span>);</span><br><span class="line">            password = properties.getProperty(<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 驱动只加载一次</span></span><br><span class="line">            Class.forName(driver);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">releaseResources</span><span class="params">(Connection conn, Statement st, ResultSet res)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(res != <span class="keyword">null</span>)&#123;</span><br><span class="line">            res.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(st != <span class="keyword">null</span>)&#123;</span><br><span class="line">            st.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">            conn.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-编写增删改的方法"><a href="#2-编写增删改的方法" class="headerlink" title="2.编写增删改的方法"></a>2.编写增删改的方法</h4><p>调用 ==executeUpdate（）==</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.guo.jdbc02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.guo.jdbc02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestInsert</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line">        Connection conn=<span class="keyword">null</span>;</span><br><span class="line">        Statement st=<span class="keyword">null</span>;</span><br><span class="line">        ResultSet res=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            String sql=<span class="string">"INSERT INTO users(`id`,`name`,`password`,`email`,`birthday`)\n"</span> +</span><br><span class="line">                    <span class="string">"VALUES(5,'laoli','123456','lao5454@q2q.com','1977-06-13')"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> i = st.executeUpdate(sql);</span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.err.println(<span class="string">"[DEBUG]insert success"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.releaseResources(conn, st, res);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>update 和  delete 只需要 在上面这个方法的基础上，更改一下sql语句</p>
<blockquote>
<p>update</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">st = conn.createStatement();</span><br><span class="line">String sql=<span class="string">"update users set `name`='gokudu',`password`='112211' where id=5"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = st.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.err.println(<span class="string">"[DEBUG]update success"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>delete</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">st = conn.createStatement();</span><br><span class="line">String sql=<span class="string">"DELETE FROM users WHERE id=5"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = st.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.err.println(<span class="string">"[DEBUG]delete success"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-编写增删改的方法"><a href="#3-编写增删改的方法" class="headerlink" title="3.编写增删改的方法"></a>3.编写增删改的方法</h4><p>调用 ==executeQuery（）==</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">st = conn.createStatement();</span><br><span class="line">String sql=<span class="string">"select * from users where id=4"</span>;</span><br><span class="line"></span><br><span class="line">ResultSet resultSet = st.executeQuery(sql);</span><br><span class="line"><span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">    System.out.println(<span class="string">"id:"</span>+resultSet.getObject(<span class="string">"id"</span>));</span><br><span class="line">    System.out.println(<span class="string">"name:"</span>+resultSet.getObject(<span class="string">"name"</span>));</span><br><span class="line">    System.out.println(<span class="string">"pwd:"</span>+resultSet.getObject(<span class="string">"password"</span>));</span><br><span class="line">    System.out.println(<span class="string">"email:"</span>+resultSet.getObject(<span class="string">"email"</span>));</span><br><span class="line">    System.out.println(<span class="string">"birth:"</span>+resultSet.getObject(<span class="string">"birthday"</span>));</span><br><span class="line">    System.out.println(<span class="string">"=========++++++++==========++++++++++==========="</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="10-5-SQL注入问题"><a href="#10-5-SQL注入问题" class="headerlink" title="10.5. SQL注入问题"></a>10.5. SQL注入问题</h3><p>SQL存在漏洞，会被攻击导致数据泄露。使用 PreparedStatement 可以防止注入，并且效率更高</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">login(<span class="string">" 'or '1=1"</span>,<span class="string">" 'or '1=1"</span>);</span><br></pre></td></tr></table></figure>

<p>通过SQL注入，查到全部用户登录数据</p>
<p><img src="https://raw.githubusercontent.com/GokuDU/docsify-blog/master/images/image-20200608182918876.png" alt="image-20200608182918876"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.guo.jdbc02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.guo.jdbc02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSQLInjection</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line"><span class="comment">//        login("yyyy","112211");</span></span><br><span class="line">        login(<span class="string">" 'or '1=1"</span>,<span class="string">" 'or '1=1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(String username,String password)</span></span>&#123;</span><br><span class="line">        Connection conn=<span class="keyword">null</span>;</span><br><span class="line">        Statement st=<span class="keyword">null</span>;</span><br><span class="line">        ResultSet res=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            st = conn.createStatement();</span><br><span class="line">            String sql=<span class="string">"select * from users where `name`='"</span> + username + <span class="string">"'and `password`='"</span> + password + <span class="string">"'"</span>;</span><br><span class="line"></span><br><span class="line">            ResultSet resultSet = st.executeQuery(sql);</span><br><span class="line">            <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">"name"</span>));</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">"password"</span>));</span><br><span class="line">                System.out.println(<span class="string">"==========================="</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.releaseResources(conn, st, res);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="10-6-PreparedStatement"><a href="#10-6-PreparedStatement" class="headerlink" title="10.6.PreparedStatement"></a>10.6.PreparedStatement</h3><p>使用 PreparedStatement 可以防止注入，并且效率更高</p>
<blockquote>
<p>增删改      insert、update、delete</p>
</blockquote>
<p>使用预编译插入数据，update和delete同理，修改一下sql，给相应的占位符设置参数类型、赋值即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 区别</span></span><br><span class="line"><span class="comment">// 使用 ?  占位符   代替参数</span></span><br><span class="line">String sql=<span class="string">"INSERT INTO users(`id`,`name`,`password`,`email`,`birthday`) VALUES(?,?,?,?,?)"</span>;</span><br><span class="line">pst = conn.prepareStatement(sql);<span class="comment">// 预编译SQL，然后不执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 手动给参数设置类型</span></span><br><span class="line">pst.setInt(<span class="number">1</span>, <span class="number">6</span>);</span><br><span class="line">pst.setString(<span class="number">2</span>, <span class="string">"laoli"</span>);</span><br><span class="line">pst.setString(<span class="number">3</span>, <span class="string">"laoli"</span>);</span><br><span class="line">pst.setString(<span class="number">4</span>, <span class="string">"lao5454@q2q.co"</span>);</span><br><span class="line"><span class="comment">// 注意   sql.Date    数据库  java.sql.Date</span></span><br><span class="line"><span class="comment">//       util.Date    Java   new Date().getTime() 获得时间戳</span></span><br><span class="line">pst.setDate(<span class="number">5</span>, <span class="keyword">new</span> java.sql.Date(<span class="keyword">new</span> Date().getTime()));</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行</span></span><br><span class="line"><span class="keyword">int</span> i = pst.executeUpdate();</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    System.out.println(<span class="string">"[DEBUG] prepareStatement INSERT SUCCESS"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完整代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.guo.Jdbc03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.guo.Jdbc02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PreparedUpdate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line">        Connection conn=<span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement pst=<span class="keyword">null</span>;</span><br><span class="line">        ResultSet res=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 区别</span></span><br><span class="line">            <span class="comment">// 使用 ?  占位符   代替参数</span></span><br><span class="line">            String sql=<span class="string">"UPDATE users SET `name`=?,`password`=? WHERE id=?"</span>;</span><br><span class="line">            pst = conn.prepareStatement(sql);<span class="comment">// 预编译SQL，然后不执行</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 手动给参数设置类型，并且赋值</span></span><br><span class="line">            pst.setString(<span class="number">1</span>, <span class="string">"updatename"</span>);</span><br><span class="line">            pst.setString(<span class="number">2</span>, <span class="string">"100000"</span>);</span><br><span class="line">            pst.setInt(<span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//执行</span></span><br><span class="line">            <span class="keyword">int</span> i = pst.executeUpdate();</span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">"[DEBUG] prepareStatement Update SUCCESS"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.releaseResources(conn, pst, res);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>查询     select</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">conn = JdbcUtils.getConnection();</span><br><span class="line"></span><br><span class="line">String sql=<span class="string">"SELECT * FROM users WHERE `name`=? AND `password`=?"</span>;</span><br><span class="line"></span><br><span class="line">pst = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">pst.setString(<span class="number">1</span>, <span class="string">"lisi"</span>);</span><br><span class="line">pst.setString(<span class="number">2</span>, <span class="string">"123456"</span>);</span><br><span class="line"></span><br><span class="line">ResultSet resultSet = pst.executeQuery();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">    System.out.println(resultSet.getObject(<span class="string">"id"</span>));</span><br><span class="line">    System.out.println(resultSet.getObject(<span class="string">"name"</span>));</span><br><span class="line">    System.out.println(resultSet.getObject(<span class="string">"password"</span>));</span><br><span class="line">    System.out.println(resultSet.getObject(<span class="string">"email"</span>));</span><br><span class="line">    System.out.println(resultSet.getObject(<span class="string">"birthday"</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完整代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.guo.Jdbc03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.guo.Jdbc02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PreparedSelect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line">        Connection conn=<span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement pst=<span class="keyword">null</span>;</span><br><span class="line">        ResultSet res=<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line"></span><br><span class="line">            String sql=<span class="string">"SELECT * FROM users WHERE `name`=? AND `password`=?"</span>;</span><br><span class="line"></span><br><span class="line">            pst = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            pst.setString(<span class="number">1</span>, <span class="string">"lisi"</span>);</span><br><span class="line">            pst.setString(<span class="number">2</span>, <span class="string">"123456"</span>);</span><br><span class="line"></span><br><span class="line">            ResultSet resultSet = pst.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">"id"</span>));</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">"name"</span>));</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">"password"</span>));</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">"email"</span>));</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">"birthday"</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.releaseResources(conn, pst, res);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>防止SQL注入</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.guo.Jdbc03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.guo.Jdbc02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PreparedTestSQLInjection</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line"><span class="comment">//        login("yyyy","112211");</span></span><br><span class="line">        login(<span class="string">" 'or '1=1"</span>,<span class="string">" 'or '1=1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(String username,String password)</span></span>&#123;</span><br><span class="line">        Connection conn=<span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement pst=<span class="keyword">null</span>;</span><br><span class="line">        ResultSet res=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// PreparedStatement 防止 SQL 注入的本质，把传递进来的参数当做字符</span></span><br><span class="line">            <span class="comment">// 假设其中存在转义字符， 比如说 '  就会被转义 </span></span><br><span class="line">            String sql=<span class="string">"select * from users where `name`=? and `password`= ? "</span>;</span><br><span class="line"></span><br><span class="line">            pst = conn.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">            pst.setString(<span class="number">1</span>, username);</span><br><span class="line">            pst.setString(<span class="number">2</span>, password);</span><br><span class="line"></span><br><span class="line">            ResultSet resultSet = pst.executeQuery();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">"name"</span>));</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">"password"</span>));</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">"email"</span>));</span><br><span class="line">                System.out.println(resultSet.getObject(<span class="string">"birthday"</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.releaseResources(conn, pst, res);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="10-7-事务"><a href="#10-7-事务" class="headerlink" title="10.7. 事务"></a>10.7. 事务</h3><blockquote>
<p>代码实现</p>
</blockquote>
<p>1.开启事务</p>
<p>2.一组事务执行完毕，提交事务</p>
<p>3.可以在catch语句中显性地定义 回滚 语句，但是默认失败其实也会回滚</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.guo.Jdbc04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.guo.Jdbc02.utils.JdbcUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestTransation</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet res = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = JdbcUtils.getConnection();</span><br><span class="line">            <span class="comment">//关闭数据库自动提交,会自动开启事务，它相比直接在数据库写，少了一步操作（START TRANSACTION）</span></span><br><span class="line">            conn.setAutoCommit(<span class="keyword">false</span>);      <span class="comment">// 即开启事务</span></span><br><span class="line"></span><br><span class="line">            String sql1=<span class="string">"update JDBC.account set money = money - 1000 where name = 'AAA'"</span>;</span><br><span class="line">            pst  = conn.prepareStatement(sql1);</span><br><span class="line">            pst.executeUpdate();</span><br><span class="line"></span><br><span class="line">            String sql2=<span class="string">"update JDBC.account set money = money + 1000 where name = 'BBB'"</span>;</span><br><span class="line">            pst  = conn.prepareStatement(sql2);</span><br><span class="line">            pst.executeUpdate();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//业务完成，提交事务</span></span><br><span class="line">            conn.commit();</span><br><span class="line">            System.out.println(<span class="string">"[DEBUG] UPDATE SUCCESS!"</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="comment">// 如果这里不写  它也会回滚</span></span><br><span class="line">            <span class="comment">// 程序以及帮我们做好了</span></span><br><span class="line">            <span class="comment">// 这里只是显示的定义回滚语句，但是默认失败它就会回滚</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                conn.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JdbcUtils.releaseResources(conn, pst, res);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="10-8-数据库连接池"><a href="#10-8-数据库连接池" class="headerlink" title="10.8.数据库连接池"></a>10.8.数据库连接池</h3><p>数据库–连接–释放</p>
<p>频繁连接–释放十分浪费资源</p>
<p>==池化技术：准备一些预先的资源，过来就能连接到预先准备好的==</p>
<p>编写连接池，实现一个接口 DataSource</p>
<blockquote>
<p>开源数据源实现</p>
</blockquote>
<p>DBCP</p>
<p>C3P0</p>
<p>Druid</p>
<p>使用了数据库连接池之后，在项目中就不需要编写连接数据库的代码了</p>
<blockquote>
<p>DBCP</p>
</blockquote>
<p>需要的jar包</p>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>狂神</tag>
      </tags>
  </entry>
</search>
